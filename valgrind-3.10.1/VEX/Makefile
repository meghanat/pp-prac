# Makefile.vex.in generated by automake 1.15 from Makefile.vex.am.
# VEX/Makefile.  Generated from Makefile.vex.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# VEX/Makefile is generated from this file at configure-time.

# This file should be included (directly or indirectly) by every
# Makefile.am that builds programs.  And also the top-level Makefile.am.

#----------------------------------------------------------------------------
# Global stuff
#----------------------------------------------------------------------------



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/valgrind
pkgincludedir = $(includedir)/valgrind
pkglibdir = $(libdir)/valgrind
pkglibexecdir = $(libexecdir)/valgrind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin13.2.0
host_triplet = x86_64-apple-darwin13.2.0

# The Android toolchain includes all kinds of stdlib helpers present in
# bionic which is bad because we are not linking with it and the Android
# linker will panic.
#am__append_1 = -nostdlib
am__append_2 = libvex-x86-darwin.a
subdir = VEX
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(top_srcdir)/Makefile.vex.am $(noinst_HEADERS) \
	$(pkginclude_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkglibdir)" \
	"$(DESTDIR)$(pkgincludedir)"
LIBRARIES = $(pkglib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libvex_amd64_darwin_a_AR = $(AR) $(ARFLAGS)
libvex_amd64_darwin_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = priv/libvex_amd64_darwin_a-main_globals.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-main_main.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-main_util.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-ir_defs.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-ir_inject.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-ir_match.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-ir_opt.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_generic_x87.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_x86_helpers.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_x86_toIR.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_amd64_helpers.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_amd64_toIR.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_ppc_helpers.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_ppc_toIR.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_arm_helpers.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_arm_toIR.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_arm64_helpers.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_arm64_toIR.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_s390_helpers.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_s390_toIR.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_mips_helpers.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-guest_mips_toIR.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_generic_regs.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_generic_simd64.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_generic_simd128.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_generic_simd256.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_generic_maddf.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_x86_defs.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_x86_isel.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_amd64_defs.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_amd64_isel.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_ppc_defs.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_ppc_isel.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_arm_defs.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_arm_isel.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_arm64_defs.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_arm64_isel.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_s390_defs.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_s390_isel.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-s390_disasm.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_mips_defs.$(OBJEXT) \
	priv/libvex_amd64_darwin_a-host_mips_isel.$(OBJEXT)
am_libvex_amd64_darwin_a_OBJECTS = $(am__objects_1)
libvex_amd64_darwin_a_OBJECTS =  \
	$(am_libvex_amd64_darwin_a_OBJECTS)
libvex_x86_darwin_a_AR = $(AR) $(ARFLAGS)
libvex_x86_darwin_a_LIBADD =
am__libvex_x86_darwin_a_SOURCES_DIST =  \
	priv/main_globals.c priv/main_main.c priv/main_util.c \
	priv/ir_defs.c priv/ir_inject.c priv/ir_match.c priv/ir_opt.c \
	priv/guest_generic_bb_to_IR.c priv/guest_generic_x87.c \
	priv/guest_x86_helpers.c priv/guest_x86_toIR.c \
	priv/guest_amd64_helpers.c priv/guest_amd64_toIR.c \
	priv/guest_ppc_helpers.c priv/guest_ppc_toIR.c \
	priv/guest_arm_helpers.c priv/guest_arm_toIR.c \
	priv/guest_arm64_helpers.c priv/guest_arm64_toIR.c \
	priv/guest_s390_helpers.c priv/guest_s390_toIR.c \
	priv/guest_mips_helpers.c priv/guest_mips_toIR.c \
	priv/host_generic_regs.c priv/host_generic_simd64.c \
	priv/host_generic_simd128.c priv/host_generic_simd256.c \
	priv/host_generic_maddf.c priv/host_generic_reg_alloc2.c \
	priv/host_x86_defs.c priv/host_x86_isel.c \
	priv/host_amd64_defs.c priv/host_amd64_isel.c \
	priv/host_ppc_defs.c priv/host_ppc_isel.c priv/host_arm_defs.c \
	priv/host_arm_isel.c priv/host_arm64_defs.c \
	priv/host_arm64_isel.c priv/host_s390_defs.c \
	priv/host_s390_isel.c priv/s390_disasm.c priv/host_mips_defs.c \
	priv/host_mips_isel.c
am__objects_2 = priv/libvex_x86_darwin_a-main_globals.$(OBJEXT) \
	priv/libvex_x86_darwin_a-main_main.$(OBJEXT) \
	priv/libvex_x86_darwin_a-main_util.$(OBJEXT) \
	priv/libvex_x86_darwin_a-ir_defs.$(OBJEXT) \
	priv/libvex_x86_darwin_a-ir_inject.$(OBJEXT) \
	priv/libvex_x86_darwin_a-ir_match.$(OBJEXT) \
	priv/libvex_x86_darwin_a-ir_opt.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_generic_x87.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_x86_helpers.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_x86_toIR.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_amd64_helpers.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_amd64_toIR.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_ppc_helpers.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_ppc_toIR.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_arm_helpers.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_arm_toIR.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_arm64_helpers.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_arm64_toIR.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_s390_helpers.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_s390_toIR.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_mips_helpers.$(OBJEXT) \
	priv/libvex_x86_darwin_a-guest_mips_toIR.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_generic_regs.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_generic_simd64.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_generic_simd128.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_generic_simd256.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_generic_maddf.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_generic_reg_alloc2.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_x86_defs.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_x86_isel.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_amd64_defs.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_amd64_isel.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_ppc_defs.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_ppc_isel.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_arm_defs.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_arm_isel.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_arm64_defs.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_arm64_isel.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_s390_defs.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_s390_isel.$(OBJEXT) \
	priv/libvex_x86_darwin_a-s390_disasm.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_mips_defs.$(OBJEXT) \
	priv/libvex_x86_darwin_a-host_mips_isel.$(OBJEXT)
am_libvex_x86_darwin_a_OBJECTS =  \
	$(am__objects_2)
libvex_x86_darwin_a_OBJECTS =  \
	$(am_libvex_x86_darwin_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libvex_amd64_darwin_a_SOURCES) \
	$(libvex_x86_darwin_a_SOURCES)
DIST_SOURCES = $(libvex_amd64_darwin_a_SOURCES) \
	$(am__libvex_x86_darwin_a_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS) $(pkginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(top_srcdir)/Makefile.all.am \
	$(top_srcdir)/Makefile.vex.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = /usr/bin/ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.15
AWK = awk
BOOST_CFLAGS = 
BOOST_LIBS = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -Wno-long-long 
CCDEPMODE = depmode=gcc3
CFLAGS = -Wno-long-long  -fno-stack-protector
CFLAGS_MPI = -g -O -fno-omit-frame-pointer -Wall -dynamic
CPP = gcc -E
CPPFLAGS = 
CXX = KCC
CXXDEPMODE = depmode=none
CXXFLAGS = -Wno-long-long  -fno-stack-protector
CYGPATH_W = echo
DEFAULT_SUPP = exp-sgcheck.supp xfree-3.supp xfree-4.supp darwin10-drd.supp darwin13.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_M32 = -m32
FLAG_M64 = -m64
FLAG_MIPS32 = 
FLAG_MIPS64 = 
FLAG_MMMX = -mmmx
FLAG_MSSE = -msse
FLAG_NO_BUILD_ID = 
FLAG_OCTEON = 
FLAG_OCTEON2 = 
FLAG_T_TEXT = -Ttext
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_W_EXTRA = -Wextra
FLAG_W_NO_EMPTY_BODY = -Wno-empty-body
FLAG_W_NO_FORMAT_ZERO_LENGTH = -Wno-format-zero-length
FLAG_W_NO_NONNULL = -Wno-nonnull
FLAG_W_NO_OVERFLOW = -Wno-overflow
FLAG_W_NO_STATIC_LOCAL_IN_INLINE = 
FLAG_W_NO_TAUTOLOGICAL_COMPARE = 
FLAG_W_NO_UNINITIALIZED = -Wno-uninitialized
FLAG_W_NO_UNUSED_FUNCTION = -Wno-unused-function
GDB = /no/gdb/was/found/at/configure/time
GLIBC_VERSION = darwin
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LDFLAGS_MPI = -dynamic -dynamiclib -all_load
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = makeinfo
MKDIR_P = .././install-sh -c -d
MPI_CC = mpicc
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.10.1
PACKAGE_TARNAME = valgrind
PACKAGE_URL = 
PACKAGE_VERSION = 3.10.1
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PREFERRED_STACK_BOUNDARY_2 = -mpreferred-stack-boundary=2
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VALT_LOAD_ADDRESS_PRI = 0x138000000
VALT_LOAD_ADDRESS_SEC = 0x38000000
VERSION = 3.10.1
VGCONF_ARCH_PRI = amd64
VGCONF_ARCH_SEC = x86
VGCONF_OS = darwin
VGCONF_PLATFORM_PRI_CAPS = AMD64_DARWIN
VGCONF_PLATFORM_SEC_CAPS = X86_DARWIN
VGCONF_PLATVARIANT = vanilla
VG_TMPDIR = /tmp
abs_builddir = /Users/meghana.thiyyakat/Downloads/valgrind-3.10.1/VEX
abs_srcdir = /Users/meghana.thiyyakat/Downloads/valgrind-3.10.1/VEX
abs_top_builddir = /Users/meghana.thiyyakat/Downloads/valgrind-3.10.1
abs_top_srcdir = /Users/meghana.thiyyakat/Downloads/valgrind-3.10.1
ac_ct_CC = gcc
ac_ct_CXX = KCC
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin13.2.0
build_alias = 
build_cpu = x86_64
build_os = darwin13.2.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin13.2.0
host_alias = 
host_cpu = x86_64
host_os = darwin13.2.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/meghana.thiyyakat/Downloads/valgrind-3.10.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
inplacedir = $(top_builddir)/.in_place

#----------------------------------------------------------------------------
# Flags
#----------------------------------------------------------------------------

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
# -fno-builtin is important for defeating LLVM's idiom recognition
# that somehow causes VG_(memset) to get into infinite recursion.
AM_CFLAGS_BASE = \
	-O2 -g \
	-Wall \
	-Wmissing-prototypes \
	-Wshadow \
	-Wpointer-arith \
	-Wstrict-prototypes \
	-Wmissing-declarations \
	-Wno-format-zero-length \
	 \
	-fno-strict-aliasing \
	-fno-builtin

#AM_CFLAGS_PSO_BASE = -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
#		     -fpic -fno-builtin


# These flags are used for building the preload shared objects (PSOs).
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.  Also, we must use any
# -mpreferred-stack-boundary flag to build the preload shared
# objects, since that risks misaligning the client's stack and
# results in segfaults like (eg) #324050.
AM_CFLAGS_PSO_BASE = -dynamic \
		     -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
		     -fpic -fPIC -fno-builtin


# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.
AM_CPPFLAGS_AMD64_DARWIN = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/VEX/pub \
	-I$(top_builddir)/VEX/pub \
	-DVGA_amd64=1 \
	-DVGO_darwin=1 \
	-DVGP_amd64_darwin=1 \
	-DVGPV_amd64_darwin_vanilla=1

AM_CPPFLAGS_X86_DARWIN = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/VEX/pub \
	-I$(top_builddir)/VEX/pub \
	-DVGA_x86=1 \
	-DVGO_darwin=1 \
	-DVGP_x86_darwin=1 \
	-DVGPV_x86_darwin_vanilla=1

AM_FLAG_M3264_X86_LINUX = -m32
AM_CFLAGS_X86_LINUX = -m32 -mpreferred-stack-boundary=2 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_X86_LINUX = -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_LINUX = -m32 -g
AM_FLAG_M3264_AMD64_LINUX = -m64
AM_CFLAGS_AMD64_LINUX = -m64 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_LINUX = -m64 -g
AM_FLAG_M3264_PPC32_LINUX = -m32
AM_CFLAGS_PPC32_LINUX = -m32 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC32_LINUX = -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC32_LINUX = -m32 -g
AM_FLAG_M3264_PPC64BE_LINUX = -m64
AM_CFLAGS_PPC64BE_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC64BE_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64BE_LINUX = -m64 -g
AM_FLAG_M3264_PPC64LE_LINUX = -m64
AM_CFLAGS_PPC64LE_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC64LE_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64LE_LINUX = -m64 -g
AM_FLAG_M3264_ARM_LINUX = -m32
AM_CFLAGS_ARM_LINUX = -m32 \
			 	$(AM_CFLAGS_BASE) -marm -mcpu=cortex-a8

AM_CFLAGS_PSO_ARM_LINUX = -m32 $(AM_CFLAGS_BASE) \
				-marm -mcpu=cortex-a8 $(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_ARM_LINUX = -m32 \
				-marm -mcpu=cortex-a8 -g

AM_FLAG_M3264_ARM64_LINUX = -m64
AM_CFLAGS_ARM64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_ARM64_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_ARM64_LINUX = -m64 -g
AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
				-mmacosx-version-min=10.5 \
				-fno-stack-protector -fno-pic -fno-PIC

AM_CFLAGS_PSO_X86_DARWIN = $(AM_CFLAGS_X86_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_DARWIN = -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.5 -fno-stack-protector

AM_CFLAGS_PSO_AMD64_DARWIN = $(AM_CFLAGS_AMD64_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_DARWIN = -arch x86_64 -g
AM_FLAG_M3264_S390X_LINUX = -m64
AM_CFLAGS_S390X_LINUX = -m64 $(AM_CFLAGS_BASE) -fomit-frame-pointer
AM_CFLAGS_PSO_S390X_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_S390X_LINUX = -m64 -g -mzarch -march=z900
AM_FLAG_M3264_MIPS32_LINUX = -m32
AM_CFLAGS_MIPS32_LINUX = -m32 $(AM_CFLAGS_BASE) 
AM_CFLAGS_PSO_MIPS32_LINUX = -m32 $(AM_CFLAGS_BASE)  \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS32_LINUX = -m32 -g 
AM_FLAG_M3264_MIPS64_LINUX = -m64
AM_CFLAGS_MIPS64_LINUX = -m64 $(AM_CFLAGS_BASE) 
AM_CFLAGS_PSO_MIPS64_LINUX = -m64 $(AM_CFLAGS_BASE)  \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS64_LINUX = -m64 -g 

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_AMD64_DARWIN)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_AMD64_DARWIN)
AM_CFLAGS_PRI = $(AM_CFLAGS_AMD64_DARWIN)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_AMD64_DARWIN)
#AM_FLAG_M3264_SEC = 
AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_X86_DARWIN)

# Baseline link flags for making vgpreload shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_1)
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_PPC64BE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC64LE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_ARM_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_ARM64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
PRELOAD_LDFLAGS_S390X_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_MIPS32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_MIPS64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64

#----------------------------------------------------------------------------
# Headers, etc
#----------------------------------------------------------------------------
EXTRA_DIST = \
	HACKING.README \
	LICENSE.README \
	LICENSE.GPL \
	quote.txt \
	newline.txt \
	auxprogs/genoffsets.c

pkginclude_HEADERS = \
	pub/libvex.h \
	pub/libvex_basictypes.h \
	pub/libvex_emnote.h \
	pub/libvex_guest_offsets.h \
	pub/libvex_guest_x86.h \
	pub/libvex_guest_amd64.h \
	pub/libvex_guest_ppc32.h \
	pub/libvex_guest_ppc64.h \
	pub/libvex_guest_arm.h \
	pub/libvex_guest_arm64.h \
	pub/libvex_guest_s390x.h \
	pub/libvex_guest_mips32.h \
	pub/libvex_guest_mips64.h \
	pub/libvex_s390x_common.h \
	pub/libvex_ir.h \
	pub/libvex_trc_values.h

noinst_HEADERS = \
	priv/main_globals.h \
	priv/main_util.h \
	priv/ir_match.h \
	priv/ir_opt.h \
	priv/guest_generic_bb_to_IR.h \
	priv/guest_generic_x87.h \
	priv/guest_x86_defs.h \
	priv/guest_amd64_defs.h \
	priv/guest_ppc_defs.h \
	priv/guest_arm_defs.h \
	priv/guest_arm64_defs.h \
	priv/guest_s390_defs.h \
	priv/guest_mips_defs.h \
	priv/host_generic_regs.h \
	priv/host_generic_simd64.h \
	priv/host_generic_simd128.h \
	priv/host_generic_simd256.h \
	priv/host_generic_maddf.h \
	priv/host_x86_defs.h \
	priv/host_amd64_defs.h \
	priv/host_ppc_defs.h \
	priv/host_arm_defs.h \
	priv/host_arm64_defs.h \
	priv/host_s390_defs.h \
	priv/s390_disasm.h \
	priv/s390_defs.h \
	priv/host_mips_defs.h

BUILT_SOURCES = pub/libvex_guest_offsets.h
CLEANFILES = pub/libvex_guest_offsets.h
CFLAGS_FOR_GENOFFSETS = $(CFLAGS)
#CFLAGS_FOR_GENOFFSETS = $(CFLAGS) -no-integrated-as

#----------------------------------------------------------------------------
# libvex-<platform>.a
#----------------------------------------------------------------------------
pkglib_LIBRARIES = libvex-amd64-darwin.a \
	$(am__append_2)
LIBVEX_SOURCES_COMMON = \
	priv/main_globals.c \
	priv/main_main.c \
	priv/main_util.c \
	priv/ir_defs.c \
	priv/ir_inject.c \
	priv/ir_match.c \
	priv/ir_opt.c \
	priv/guest_generic_bb_to_IR.c \
	priv/guest_generic_x87.c \
	priv/guest_x86_helpers.c \
	priv/guest_x86_toIR.c \
	priv/guest_amd64_helpers.c \
	priv/guest_amd64_toIR.c \
	priv/guest_ppc_helpers.c \
	priv/guest_ppc_toIR.c \
	priv/guest_arm_helpers.c \
	priv/guest_arm_toIR.c \
	priv/guest_arm64_helpers.c \
	priv/guest_arm64_toIR.c \
	priv/guest_s390_helpers.c \
	priv/guest_s390_toIR.c \
	priv/guest_mips_helpers.c \
	priv/guest_mips_toIR.c \
	priv/host_generic_regs.c \
	priv/host_generic_simd64.c \
	priv/host_generic_simd128.c \
	priv/host_generic_simd256.c \
	priv/host_generic_maddf.c \
	priv/host_generic_reg_alloc2.c \
	priv/host_x86_defs.c \
	priv/host_x86_isel.c \
	priv/host_amd64_defs.c \
	priv/host_amd64_isel.c \
	priv/host_ppc_defs.c \
	priv/host_ppc_isel.c \
	priv/host_arm_defs.c \
	priv/host_arm_isel.c \
	priv/host_arm64_defs.c \
	priv/host_arm64_isel.c \
	priv/host_s390_defs.c \
	priv/host_s390_isel.c \
	priv/s390_disasm.c \
	priv/host_mips_defs.c \
	priv/host_mips_isel.c

LIBVEX_CFLAGS = \
	-Wbad-function-cast \
	-Wcast-qual \
	-Wcast-align \
	-fstrict-aliasing

libvex_amd64_darwin_a_SOURCES = $(LIBVEX_SOURCES_COMMON)
libvex_amd64_darwin_a_CPPFLAGS = \
        $(AM_CPPFLAGS_AMD64_DARWIN) -Ipriv

libvex_amd64_darwin_a_CFLAGS = \
        $(AM_CFLAGS_AMD64_DARWIN) $(LIBVEX_CFLAGS)

libvex_x86_darwin_a_SOURCES = $(LIBVEX_SOURCES_COMMON)
libvex_x86_darwin_a_CPPFLAGS = \
        $(AM_CPPFLAGS_X86_DARWIN) -Ipriv

libvex_x86_darwin_a_CFLAGS = \
        $(AM_CFLAGS_X86_DARWIN) $(LIBVEX_CFLAGS)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(top_srcdir)/Makefile.vex.in: # $(top_srcdir)/Makefile.vex.am $(top_srcdir)/Makefile.all.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign VEX/Makefile:Makefile.vex.in'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign VEX/Makefile:Makefile.vex.in
Makefile: $(top_srcdir)/Makefile.vex.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.all.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-pkglibLIBRARIES: $(pkglib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pkglib_LIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(pkglibdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(pkglib_LIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(pkglibdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(pkglibdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-pkglibLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkglibdir)'; $(am__uninstall_files_from_dir)

clean-pkglibLIBRARIES:
	-test -z "$(pkglib_LIBRARIES)" || rm -f $(pkglib_LIBRARIES)
priv/$(am__dirstamp):
	@$(MKDIR_P) priv
	@: > priv/$(am__dirstamp)
priv/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) priv/$(DEPDIR)
	@: > priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-main_globals.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-main_main.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-main_util.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-ir_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-ir_inject.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-ir_match.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-ir_opt.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_generic_x87.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_x86_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_x86_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_amd64_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_amd64_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_ppc_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_ppc_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_arm_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_arm_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_arm64_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_arm64_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_s390_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_s390_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_mips_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-guest_mips_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_generic_regs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_generic_simd64.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_generic_simd128.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_generic_simd256.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_generic_maddf.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_x86_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_x86_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_amd64_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_amd64_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_ppc_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_ppc_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_arm_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_arm_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_arm64_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_arm64_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_s390_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_s390_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-s390_disasm.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_mips_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_amd64_darwin_a-host_mips_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)

libvex-amd64-darwin.a: $(libvex_amd64_darwin_a_OBJECTS) $(libvex_amd64_darwin_a_DEPENDENCIES) $(EXTRA_libvex_amd64_darwin_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvex-amd64-darwin.a
	$(AM_V_AR)$(libvex_amd64_darwin_a_AR) libvex-amd64-darwin.a $(libvex_amd64_darwin_a_OBJECTS) $(libvex_amd64_darwin_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvex-amd64-darwin.a
priv/libvex_x86_darwin_a-main_globals.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-main_main.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-main_util.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-ir_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-ir_inject.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-ir_match.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-ir_opt.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_generic_x87.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_x86_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_x86_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_amd64_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_amd64_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_ppc_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_ppc_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_arm_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_arm_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_arm64_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_arm64_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_s390_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_s390_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_mips_helpers.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-guest_mips_toIR.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_generic_regs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_generic_simd64.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_generic_simd128.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_generic_simd256.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_generic_maddf.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_generic_reg_alloc2.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_x86_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_x86_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_amd64_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_amd64_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_ppc_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_ppc_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_arm_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_arm_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_arm64_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_arm64_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_s390_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_s390_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-s390_disasm.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_mips_defs.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)
priv/libvex_x86_darwin_a-host_mips_isel.$(OBJEXT):  \
	priv/$(am__dirstamp) priv/$(DEPDIR)/$(am__dirstamp)

libvex-x86-darwin.a: $(libvex_x86_darwin_a_OBJECTS) $(libvex_x86_darwin_a_DEPENDENCIES) $(EXTRA_libvex_x86_darwin_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvex-x86-darwin.a
	$(AM_V_AR)$(libvex_x86_darwin_a_AR) libvex-x86-darwin.a $(libvex_x86_darwin_a_OBJECTS) $(libvex_x86_darwin_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvex-x86-darwin.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f priv/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_helpers.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_toIR.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_helpers.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_toIR.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_helpers.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_toIR.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_bb_to_IR.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_x87.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_helpers.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_toIR.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_helpers.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_toIR.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_helpers.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_toIR.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_helpers.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_toIR.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_defs.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_isel.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_defs.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_isel.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_defs.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_isel.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_maddf.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_reg_alloc2.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_regs.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd128.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd256.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd64.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_defs.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_isel.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_defs.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_isel.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_defs.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_isel.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_defs.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_isel.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_defs.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_inject.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_match.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_opt.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-main_globals.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-main_main.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-main_util.Po
include priv/$(DEPDIR)/libvex_amd64_darwin_a-s390_disasm.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_helpers.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_toIR.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_helpers.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_toIR.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_helpers.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_toIR.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_bb_to_IR.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_x87.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_helpers.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_toIR.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_helpers.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_toIR.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_helpers.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_toIR.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_helpers.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_toIR.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_defs.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_isel.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_defs.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_isel.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_defs.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_isel.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_maddf.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_reg_alloc2.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_regs.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd128.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd256.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd64.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_defs.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_isel.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_defs.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_isel.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_defs.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_isel.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_defs.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_isel.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-ir_defs.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-ir_inject.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-ir_match.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-ir_opt.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-main_globals.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-main_main.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-main_util.Po
include priv/$(DEPDIR)/libvex_x86_darwin_a-s390_disasm.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

priv/libvex_amd64_darwin_a-main_globals.o: priv/main_globals.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-main_globals.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-main_globals.Tpo -c -o priv/libvex_amd64_darwin_a-main_globals.o `test -f 'priv/main_globals.c' || echo '$(srcdir)/'`priv/main_globals.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-main_globals.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-main_globals.Po
#	$(AM_V_CC)source='priv/main_globals.c' object='priv/libvex_amd64_darwin_a-main_globals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-main_globals.o `test -f 'priv/main_globals.c' || echo '$(srcdir)/'`priv/main_globals.c

priv/libvex_amd64_darwin_a-main_globals.obj: priv/main_globals.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-main_globals.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-main_globals.Tpo -c -o priv/libvex_amd64_darwin_a-main_globals.obj `if test -f 'priv/main_globals.c'; then $(CYGPATH_W) 'priv/main_globals.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_globals.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-main_globals.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-main_globals.Po
#	$(AM_V_CC)source='priv/main_globals.c' object='priv/libvex_amd64_darwin_a-main_globals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-main_globals.obj `if test -f 'priv/main_globals.c'; then $(CYGPATH_W) 'priv/main_globals.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_globals.c'; fi`

priv/libvex_amd64_darwin_a-main_main.o: priv/main_main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-main_main.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-main_main.Tpo -c -o priv/libvex_amd64_darwin_a-main_main.o `test -f 'priv/main_main.c' || echo '$(srcdir)/'`priv/main_main.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-main_main.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-main_main.Po
#	$(AM_V_CC)source='priv/main_main.c' object='priv/libvex_amd64_darwin_a-main_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-main_main.o `test -f 'priv/main_main.c' || echo '$(srcdir)/'`priv/main_main.c

priv/libvex_amd64_darwin_a-main_main.obj: priv/main_main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-main_main.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-main_main.Tpo -c -o priv/libvex_amd64_darwin_a-main_main.obj `if test -f 'priv/main_main.c'; then $(CYGPATH_W) 'priv/main_main.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_main.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-main_main.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-main_main.Po
#	$(AM_V_CC)source='priv/main_main.c' object='priv/libvex_amd64_darwin_a-main_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-main_main.obj `if test -f 'priv/main_main.c'; then $(CYGPATH_W) 'priv/main_main.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_main.c'; fi`

priv/libvex_amd64_darwin_a-main_util.o: priv/main_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-main_util.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-main_util.Tpo -c -o priv/libvex_amd64_darwin_a-main_util.o `test -f 'priv/main_util.c' || echo '$(srcdir)/'`priv/main_util.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-main_util.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-main_util.Po
#	$(AM_V_CC)source='priv/main_util.c' object='priv/libvex_amd64_darwin_a-main_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-main_util.o `test -f 'priv/main_util.c' || echo '$(srcdir)/'`priv/main_util.c

priv/libvex_amd64_darwin_a-main_util.obj: priv/main_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-main_util.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-main_util.Tpo -c -o priv/libvex_amd64_darwin_a-main_util.obj `if test -f 'priv/main_util.c'; then $(CYGPATH_W) 'priv/main_util.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_util.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-main_util.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-main_util.Po
#	$(AM_V_CC)source='priv/main_util.c' object='priv/libvex_amd64_darwin_a-main_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-main_util.obj `if test -f 'priv/main_util.c'; then $(CYGPATH_W) 'priv/main_util.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_util.c'; fi`

priv/libvex_amd64_darwin_a-ir_defs.o: priv/ir_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-ir_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_defs.Tpo -c -o priv/libvex_amd64_darwin_a-ir_defs.o `test -f 'priv/ir_defs.c' || echo '$(srcdir)/'`priv/ir_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_defs.Po
#	$(AM_V_CC)source='priv/ir_defs.c' object='priv/libvex_amd64_darwin_a-ir_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-ir_defs.o `test -f 'priv/ir_defs.c' || echo '$(srcdir)/'`priv/ir_defs.c

priv/libvex_amd64_darwin_a-ir_defs.obj: priv/ir_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-ir_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_defs.Tpo -c -o priv/libvex_amd64_darwin_a-ir_defs.obj `if test -f 'priv/ir_defs.c'; then $(CYGPATH_W) 'priv/ir_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_defs.Po
#	$(AM_V_CC)source='priv/ir_defs.c' object='priv/libvex_amd64_darwin_a-ir_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-ir_defs.obj `if test -f 'priv/ir_defs.c'; then $(CYGPATH_W) 'priv/ir_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_defs.c'; fi`

priv/libvex_amd64_darwin_a-ir_inject.o: priv/ir_inject.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-ir_inject.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_inject.Tpo -c -o priv/libvex_amd64_darwin_a-ir_inject.o `test -f 'priv/ir_inject.c' || echo '$(srcdir)/'`priv/ir_inject.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_inject.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_inject.Po
#	$(AM_V_CC)source='priv/ir_inject.c' object='priv/libvex_amd64_darwin_a-ir_inject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-ir_inject.o `test -f 'priv/ir_inject.c' || echo '$(srcdir)/'`priv/ir_inject.c

priv/libvex_amd64_darwin_a-ir_inject.obj: priv/ir_inject.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-ir_inject.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_inject.Tpo -c -o priv/libvex_amd64_darwin_a-ir_inject.obj `if test -f 'priv/ir_inject.c'; then $(CYGPATH_W) 'priv/ir_inject.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_inject.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_inject.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_inject.Po
#	$(AM_V_CC)source='priv/ir_inject.c' object='priv/libvex_amd64_darwin_a-ir_inject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-ir_inject.obj `if test -f 'priv/ir_inject.c'; then $(CYGPATH_W) 'priv/ir_inject.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_inject.c'; fi`

priv/libvex_amd64_darwin_a-ir_match.o: priv/ir_match.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-ir_match.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_match.Tpo -c -o priv/libvex_amd64_darwin_a-ir_match.o `test -f 'priv/ir_match.c' || echo '$(srcdir)/'`priv/ir_match.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_match.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_match.Po
#	$(AM_V_CC)source='priv/ir_match.c' object='priv/libvex_amd64_darwin_a-ir_match.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-ir_match.o `test -f 'priv/ir_match.c' || echo '$(srcdir)/'`priv/ir_match.c

priv/libvex_amd64_darwin_a-ir_match.obj: priv/ir_match.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-ir_match.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_match.Tpo -c -o priv/libvex_amd64_darwin_a-ir_match.obj `if test -f 'priv/ir_match.c'; then $(CYGPATH_W) 'priv/ir_match.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_match.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_match.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_match.Po
#	$(AM_V_CC)source='priv/ir_match.c' object='priv/libvex_amd64_darwin_a-ir_match.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-ir_match.obj `if test -f 'priv/ir_match.c'; then $(CYGPATH_W) 'priv/ir_match.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_match.c'; fi`

priv/libvex_amd64_darwin_a-ir_opt.o: priv/ir_opt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-ir_opt.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_opt.Tpo -c -o priv/libvex_amd64_darwin_a-ir_opt.o `test -f 'priv/ir_opt.c' || echo '$(srcdir)/'`priv/ir_opt.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_opt.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_opt.Po
#	$(AM_V_CC)source='priv/ir_opt.c' object='priv/libvex_amd64_darwin_a-ir_opt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-ir_opt.o `test -f 'priv/ir_opt.c' || echo '$(srcdir)/'`priv/ir_opt.c

priv/libvex_amd64_darwin_a-ir_opt.obj: priv/ir_opt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-ir_opt.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_opt.Tpo -c -o priv/libvex_amd64_darwin_a-ir_opt.obj `if test -f 'priv/ir_opt.c'; then $(CYGPATH_W) 'priv/ir_opt.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_opt.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_opt.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-ir_opt.Po
#	$(AM_V_CC)source='priv/ir_opt.c' object='priv/libvex_amd64_darwin_a-ir_opt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-ir_opt.obj `if test -f 'priv/ir_opt.c'; then $(CYGPATH_W) 'priv/ir_opt.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_opt.c'; fi`

priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.o: priv/guest_generic_bb_to_IR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_bb_to_IR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.o `test -f 'priv/guest_generic_bb_to_IR.c' || echo '$(srcdir)/'`priv/guest_generic_bb_to_IR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_bb_to_IR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_bb_to_IR.Po
#	$(AM_V_CC)source='priv/guest_generic_bb_to_IR.c' object='priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.o `test -f 'priv/guest_generic_bb_to_IR.c' || echo '$(srcdir)/'`priv/guest_generic_bb_to_IR.c

priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.obj: priv/guest_generic_bb_to_IR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_bb_to_IR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.obj `if test -f 'priv/guest_generic_bb_to_IR.c'; then $(CYGPATH_W) 'priv/guest_generic_bb_to_IR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_generic_bb_to_IR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_bb_to_IR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_bb_to_IR.Po
#	$(AM_V_CC)source='priv/guest_generic_bb_to_IR.c' object='priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_generic_bb_to_IR.obj `if test -f 'priv/guest_generic_bb_to_IR.c'; then $(CYGPATH_W) 'priv/guest_generic_bb_to_IR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_generic_bb_to_IR.c'; fi`

priv/libvex_amd64_darwin_a-guest_generic_x87.o: priv/guest_generic_x87.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_generic_x87.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_x87.Tpo -c -o priv/libvex_amd64_darwin_a-guest_generic_x87.o `test -f 'priv/guest_generic_x87.c' || echo '$(srcdir)/'`priv/guest_generic_x87.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_x87.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_x87.Po
#	$(AM_V_CC)source='priv/guest_generic_x87.c' object='priv/libvex_amd64_darwin_a-guest_generic_x87.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_generic_x87.o `test -f 'priv/guest_generic_x87.c' || echo '$(srcdir)/'`priv/guest_generic_x87.c

priv/libvex_amd64_darwin_a-guest_generic_x87.obj: priv/guest_generic_x87.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_generic_x87.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_x87.Tpo -c -o priv/libvex_amd64_darwin_a-guest_generic_x87.obj `if test -f 'priv/guest_generic_x87.c'; then $(CYGPATH_W) 'priv/guest_generic_x87.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_generic_x87.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_x87.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_generic_x87.Po
#	$(AM_V_CC)source='priv/guest_generic_x87.c' object='priv/libvex_amd64_darwin_a-guest_generic_x87.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_generic_x87.obj `if test -f 'priv/guest_generic_x87.c'; then $(CYGPATH_W) 'priv/guest_generic_x87.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_generic_x87.c'; fi`

priv/libvex_amd64_darwin_a-guest_x86_helpers.o: priv/guest_x86_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_x86_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_x86_helpers.o `test -f 'priv/guest_x86_helpers.c' || echo '$(srcdir)/'`priv/guest_x86_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_helpers.Po
#	$(AM_V_CC)source='priv/guest_x86_helpers.c' object='priv/libvex_amd64_darwin_a-guest_x86_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_x86_helpers.o `test -f 'priv/guest_x86_helpers.c' || echo '$(srcdir)/'`priv/guest_x86_helpers.c

priv/libvex_amd64_darwin_a-guest_x86_helpers.obj: priv/guest_x86_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_x86_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_x86_helpers.obj `if test -f 'priv/guest_x86_helpers.c'; then $(CYGPATH_W) 'priv/guest_x86_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_x86_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_helpers.Po
#	$(AM_V_CC)source='priv/guest_x86_helpers.c' object='priv/libvex_amd64_darwin_a-guest_x86_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_x86_helpers.obj `if test -f 'priv/guest_x86_helpers.c'; then $(CYGPATH_W) 'priv/guest_x86_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_x86_helpers.c'; fi`

priv/libvex_amd64_darwin_a-guest_x86_toIR.o: priv/guest_x86_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_x86_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_x86_toIR.o `test -f 'priv/guest_x86_toIR.c' || echo '$(srcdir)/'`priv/guest_x86_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_toIR.Po
#	$(AM_V_CC)source='priv/guest_x86_toIR.c' object='priv/libvex_amd64_darwin_a-guest_x86_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_x86_toIR.o `test -f 'priv/guest_x86_toIR.c' || echo '$(srcdir)/'`priv/guest_x86_toIR.c

priv/libvex_amd64_darwin_a-guest_x86_toIR.obj: priv/guest_x86_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_x86_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_x86_toIR.obj `if test -f 'priv/guest_x86_toIR.c'; then $(CYGPATH_W) 'priv/guest_x86_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_x86_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_x86_toIR.Po
#	$(AM_V_CC)source='priv/guest_x86_toIR.c' object='priv/libvex_amd64_darwin_a-guest_x86_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_x86_toIR.obj `if test -f 'priv/guest_x86_toIR.c'; then $(CYGPATH_W) 'priv/guest_x86_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_x86_toIR.c'; fi`

priv/libvex_amd64_darwin_a-guest_amd64_helpers.o: priv/guest_amd64_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_amd64_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_amd64_helpers.o `test -f 'priv/guest_amd64_helpers.c' || echo '$(srcdir)/'`priv/guest_amd64_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_helpers.Po
#	$(AM_V_CC)source='priv/guest_amd64_helpers.c' object='priv/libvex_amd64_darwin_a-guest_amd64_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_amd64_helpers.o `test -f 'priv/guest_amd64_helpers.c' || echo '$(srcdir)/'`priv/guest_amd64_helpers.c

priv/libvex_amd64_darwin_a-guest_amd64_helpers.obj: priv/guest_amd64_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_amd64_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_amd64_helpers.obj `if test -f 'priv/guest_amd64_helpers.c'; then $(CYGPATH_W) 'priv/guest_amd64_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_amd64_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_helpers.Po
#	$(AM_V_CC)source='priv/guest_amd64_helpers.c' object='priv/libvex_amd64_darwin_a-guest_amd64_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_amd64_helpers.obj `if test -f 'priv/guest_amd64_helpers.c'; then $(CYGPATH_W) 'priv/guest_amd64_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_amd64_helpers.c'; fi`

priv/libvex_amd64_darwin_a-guest_amd64_toIR.o: priv/guest_amd64_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_amd64_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_amd64_toIR.o `test -f 'priv/guest_amd64_toIR.c' || echo '$(srcdir)/'`priv/guest_amd64_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_toIR.Po
#	$(AM_V_CC)source='priv/guest_amd64_toIR.c' object='priv/libvex_amd64_darwin_a-guest_amd64_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_amd64_toIR.o `test -f 'priv/guest_amd64_toIR.c' || echo '$(srcdir)/'`priv/guest_amd64_toIR.c

priv/libvex_amd64_darwin_a-guest_amd64_toIR.obj: priv/guest_amd64_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_amd64_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_amd64_toIR.obj `if test -f 'priv/guest_amd64_toIR.c'; then $(CYGPATH_W) 'priv/guest_amd64_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_amd64_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_amd64_toIR.Po
#	$(AM_V_CC)source='priv/guest_amd64_toIR.c' object='priv/libvex_amd64_darwin_a-guest_amd64_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_amd64_toIR.obj `if test -f 'priv/guest_amd64_toIR.c'; then $(CYGPATH_W) 'priv/guest_amd64_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_amd64_toIR.c'; fi`

priv/libvex_amd64_darwin_a-guest_ppc_helpers.o: priv/guest_ppc_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_ppc_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_ppc_helpers.o `test -f 'priv/guest_ppc_helpers.c' || echo '$(srcdir)/'`priv/guest_ppc_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_helpers.Po
#	$(AM_V_CC)source='priv/guest_ppc_helpers.c' object='priv/libvex_amd64_darwin_a-guest_ppc_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_ppc_helpers.o `test -f 'priv/guest_ppc_helpers.c' || echo '$(srcdir)/'`priv/guest_ppc_helpers.c

priv/libvex_amd64_darwin_a-guest_ppc_helpers.obj: priv/guest_ppc_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_ppc_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_ppc_helpers.obj `if test -f 'priv/guest_ppc_helpers.c'; then $(CYGPATH_W) 'priv/guest_ppc_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_ppc_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_helpers.Po
#	$(AM_V_CC)source='priv/guest_ppc_helpers.c' object='priv/libvex_amd64_darwin_a-guest_ppc_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_ppc_helpers.obj `if test -f 'priv/guest_ppc_helpers.c'; then $(CYGPATH_W) 'priv/guest_ppc_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_ppc_helpers.c'; fi`

priv/libvex_amd64_darwin_a-guest_ppc_toIR.o: priv/guest_ppc_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_ppc_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_ppc_toIR.o `test -f 'priv/guest_ppc_toIR.c' || echo '$(srcdir)/'`priv/guest_ppc_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_toIR.Po
#	$(AM_V_CC)source='priv/guest_ppc_toIR.c' object='priv/libvex_amd64_darwin_a-guest_ppc_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_ppc_toIR.o `test -f 'priv/guest_ppc_toIR.c' || echo '$(srcdir)/'`priv/guest_ppc_toIR.c

priv/libvex_amd64_darwin_a-guest_ppc_toIR.obj: priv/guest_ppc_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_ppc_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_ppc_toIR.obj `if test -f 'priv/guest_ppc_toIR.c'; then $(CYGPATH_W) 'priv/guest_ppc_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_ppc_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_ppc_toIR.Po
#	$(AM_V_CC)source='priv/guest_ppc_toIR.c' object='priv/libvex_amd64_darwin_a-guest_ppc_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_ppc_toIR.obj `if test -f 'priv/guest_ppc_toIR.c'; then $(CYGPATH_W) 'priv/guest_ppc_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_ppc_toIR.c'; fi`

priv/libvex_amd64_darwin_a-guest_arm_helpers.o: priv/guest_arm_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_arm_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_arm_helpers.o `test -f 'priv/guest_arm_helpers.c' || echo '$(srcdir)/'`priv/guest_arm_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_helpers.Po
#	$(AM_V_CC)source='priv/guest_arm_helpers.c' object='priv/libvex_amd64_darwin_a-guest_arm_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_arm_helpers.o `test -f 'priv/guest_arm_helpers.c' || echo '$(srcdir)/'`priv/guest_arm_helpers.c

priv/libvex_amd64_darwin_a-guest_arm_helpers.obj: priv/guest_arm_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_arm_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_arm_helpers.obj `if test -f 'priv/guest_arm_helpers.c'; then $(CYGPATH_W) 'priv/guest_arm_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_helpers.Po
#	$(AM_V_CC)source='priv/guest_arm_helpers.c' object='priv/libvex_amd64_darwin_a-guest_arm_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_arm_helpers.obj `if test -f 'priv/guest_arm_helpers.c'; then $(CYGPATH_W) 'priv/guest_arm_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm_helpers.c'; fi`

priv/libvex_amd64_darwin_a-guest_arm_toIR.o: priv/guest_arm_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_arm_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_arm_toIR.o `test -f 'priv/guest_arm_toIR.c' || echo '$(srcdir)/'`priv/guest_arm_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_toIR.Po
#	$(AM_V_CC)source='priv/guest_arm_toIR.c' object='priv/libvex_amd64_darwin_a-guest_arm_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_arm_toIR.o `test -f 'priv/guest_arm_toIR.c' || echo '$(srcdir)/'`priv/guest_arm_toIR.c

priv/libvex_amd64_darwin_a-guest_arm_toIR.obj: priv/guest_arm_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_arm_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_arm_toIR.obj `if test -f 'priv/guest_arm_toIR.c'; then $(CYGPATH_W) 'priv/guest_arm_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm_toIR.Po
#	$(AM_V_CC)source='priv/guest_arm_toIR.c' object='priv/libvex_amd64_darwin_a-guest_arm_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_arm_toIR.obj `if test -f 'priv/guest_arm_toIR.c'; then $(CYGPATH_W) 'priv/guest_arm_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm_toIR.c'; fi`

priv/libvex_amd64_darwin_a-guest_arm64_helpers.o: priv/guest_arm64_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_arm64_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_arm64_helpers.o `test -f 'priv/guest_arm64_helpers.c' || echo '$(srcdir)/'`priv/guest_arm64_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_helpers.Po
#	$(AM_V_CC)source='priv/guest_arm64_helpers.c' object='priv/libvex_amd64_darwin_a-guest_arm64_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_arm64_helpers.o `test -f 'priv/guest_arm64_helpers.c' || echo '$(srcdir)/'`priv/guest_arm64_helpers.c

priv/libvex_amd64_darwin_a-guest_arm64_helpers.obj: priv/guest_arm64_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_arm64_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_arm64_helpers.obj `if test -f 'priv/guest_arm64_helpers.c'; then $(CYGPATH_W) 'priv/guest_arm64_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm64_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_helpers.Po
#	$(AM_V_CC)source='priv/guest_arm64_helpers.c' object='priv/libvex_amd64_darwin_a-guest_arm64_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_arm64_helpers.obj `if test -f 'priv/guest_arm64_helpers.c'; then $(CYGPATH_W) 'priv/guest_arm64_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm64_helpers.c'; fi`

priv/libvex_amd64_darwin_a-guest_arm64_toIR.o: priv/guest_arm64_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_arm64_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_arm64_toIR.o `test -f 'priv/guest_arm64_toIR.c' || echo '$(srcdir)/'`priv/guest_arm64_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_toIR.Po
#	$(AM_V_CC)source='priv/guest_arm64_toIR.c' object='priv/libvex_amd64_darwin_a-guest_arm64_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_arm64_toIR.o `test -f 'priv/guest_arm64_toIR.c' || echo '$(srcdir)/'`priv/guest_arm64_toIR.c

priv/libvex_amd64_darwin_a-guest_arm64_toIR.obj: priv/guest_arm64_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_arm64_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_arm64_toIR.obj `if test -f 'priv/guest_arm64_toIR.c'; then $(CYGPATH_W) 'priv/guest_arm64_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm64_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_arm64_toIR.Po
#	$(AM_V_CC)source='priv/guest_arm64_toIR.c' object='priv/libvex_amd64_darwin_a-guest_arm64_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_arm64_toIR.obj `if test -f 'priv/guest_arm64_toIR.c'; then $(CYGPATH_W) 'priv/guest_arm64_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm64_toIR.c'; fi`

priv/libvex_amd64_darwin_a-guest_s390_helpers.o: priv/guest_s390_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_s390_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_s390_helpers.o `test -f 'priv/guest_s390_helpers.c' || echo '$(srcdir)/'`priv/guest_s390_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_helpers.Po
#	$(AM_V_CC)source='priv/guest_s390_helpers.c' object='priv/libvex_amd64_darwin_a-guest_s390_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_s390_helpers.o `test -f 'priv/guest_s390_helpers.c' || echo '$(srcdir)/'`priv/guest_s390_helpers.c

priv/libvex_amd64_darwin_a-guest_s390_helpers.obj: priv/guest_s390_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_s390_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_s390_helpers.obj `if test -f 'priv/guest_s390_helpers.c'; then $(CYGPATH_W) 'priv/guest_s390_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_s390_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_helpers.Po
#	$(AM_V_CC)source='priv/guest_s390_helpers.c' object='priv/libvex_amd64_darwin_a-guest_s390_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_s390_helpers.obj `if test -f 'priv/guest_s390_helpers.c'; then $(CYGPATH_W) 'priv/guest_s390_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_s390_helpers.c'; fi`

priv/libvex_amd64_darwin_a-guest_s390_toIR.o: priv/guest_s390_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_s390_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_s390_toIR.o `test -f 'priv/guest_s390_toIR.c' || echo '$(srcdir)/'`priv/guest_s390_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_toIR.Po
#	$(AM_V_CC)source='priv/guest_s390_toIR.c' object='priv/libvex_amd64_darwin_a-guest_s390_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_s390_toIR.o `test -f 'priv/guest_s390_toIR.c' || echo '$(srcdir)/'`priv/guest_s390_toIR.c

priv/libvex_amd64_darwin_a-guest_s390_toIR.obj: priv/guest_s390_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_s390_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_s390_toIR.obj `if test -f 'priv/guest_s390_toIR.c'; then $(CYGPATH_W) 'priv/guest_s390_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_s390_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_s390_toIR.Po
#	$(AM_V_CC)source='priv/guest_s390_toIR.c' object='priv/libvex_amd64_darwin_a-guest_s390_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_s390_toIR.obj `if test -f 'priv/guest_s390_toIR.c'; then $(CYGPATH_W) 'priv/guest_s390_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_s390_toIR.c'; fi`

priv/libvex_amd64_darwin_a-guest_mips_helpers.o: priv/guest_mips_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_mips_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_mips_helpers.o `test -f 'priv/guest_mips_helpers.c' || echo '$(srcdir)/'`priv/guest_mips_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_helpers.Po
#	$(AM_V_CC)source='priv/guest_mips_helpers.c' object='priv/libvex_amd64_darwin_a-guest_mips_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_mips_helpers.o `test -f 'priv/guest_mips_helpers.c' || echo '$(srcdir)/'`priv/guest_mips_helpers.c

priv/libvex_amd64_darwin_a-guest_mips_helpers.obj: priv/guest_mips_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_mips_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_helpers.Tpo -c -o priv/libvex_amd64_darwin_a-guest_mips_helpers.obj `if test -f 'priv/guest_mips_helpers.c'; then $(CYGPATH_W) 'priv/guest_mips_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_mips_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_helpers.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_helpers.Po
#	$(AM_V_CC)source='priv/guest_mips_helpers.c' object='priv/libvex_amd64_darwin_a-guest_mips_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_mips_helpers.obj `if test -f 'priv/guest_mips_helpers.c'; then $(CYGPATH_W) 'priv/guest_mips_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_mips_helpers.c'; fi`

priv/libvex_amd64_darwin_a-guest_mips_toIR.o: priv/guest_mips_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_mips_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_mips_toIR.o `test -f 'priv/guest_mips_toIR.c' || echo '$(srcdir)/'`priv/guest_mips_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_toIR.Po
#	$(AM_V_CC)source='priv/guest_mips_toIR.c' object='priv/libvex_amd64_darwin_a-guest_mips_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_mips_toIR.o `test -f 'priv/guest_mips_toIR.c' || echo '$(srcdir)/'`priv/guest_mips_toIR.c

priv/libvex_amd64_darwin_a-guest_mips_toIR.obj: priv/guest_mips_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-guest_mips_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_toIR.Tpo -c -o priv/libvex_amd64_darwin_a-guest_mips_toIR.obj `if test -f 'priv/guest_mips_toIR.c'; then $(CYGPATH_W) 'priv/guest_mips_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_mips_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_toIR.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-guest_mips_toIR.Po
#	$(AM_V_CC)source='priv/guest_mips_toIR.c' object='priv/libvex_amd64_darwin_a-guest_mips_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-guest_mips_toIR.obj `if test -f 'priv/guest_mips_toIR.c'; then $(CYGPATH_W) 'priv/guest_mips_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_mips_toIR.c'; fi`

priv/libvex_amd64_darwin_a-host_generic_regs.o: priv/host_generic_regs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_regs.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_regs.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_regs.o `test -f 'priv/host_generic_regs.c' || echo '$(srcdir)/'`priv/host_generic_regs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_regs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_regs.Po
#	$(AM_V_CC)source='priv/host_generic_regs.c' object='priv/libvex_amd64_darwin_a-host_generic_regs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_regs.o `test -f 'priv/host_generic_regs.c' || echo '$(srcdir)/'`priv/host_generic_regs.c

priv/libvex_amd64_darwin_a-host_generic_regs.obj: priv/host_generic_regs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_regs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_regs.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_regs.obj `if test -f 'priv/host_generic_regs.c'; then $(CYGPATH_W) 'priv/host_generic_regs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_regs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_regs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_regs.Po
#	$(AM_V_CC)source='priv/host_generic_regs.c' object='priv/libvex_amd64_darwin_a-host_generic_regs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_regs.obj `if test -f 'priv/host_generic_regs.c'; then $(CYGPATH_W) 'priv/host_generic_regs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_regs.c'; fi`

priv/libvex_amd64_darwin_a-host_generic_simd64.o: priv/host_generic_simd64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_simd64.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd64.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_simd64.o `test -f 'priv/host_generic_simd64.c' || echo '$(srcdir)/'`priv/host_generic_simd64.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd64.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd64.Po
#	$(AM_V_CC)source='priv/host_generic_simd64.c' object='priv/libvex_amd64_darwin_a-host_generic_simd64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_simd64.o `test -f 'priv/host_generic_simd64.c' || echo '$(srcdir)/'`priv/host_generic_simd64.c

priv/libvex_amd64_darwin_a-host_generic_simd64.obj: priv/host_generic_simd64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_simd64.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd64.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_simd64.obj `if test -f 'priv/host_generic_simd64.c'; then $(CYGPATH_W) 'priv/host_generic_simd64.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd64.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd64.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd64.Po
#	$(AM_V_CC)source='priv/host_generic_simd64.c' object='priv/libvex_amd64_darwin_a-host_generic_simd64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_simd64.obj `if test -f 'priv/host_generic_simd64.c'; then $(CYGPATH_W) 'priv/host_generic_simd64.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd64.c'; fi`

priv/libvex_amd64_darwin_a-host_generic_simd128.o: priv/host_generic_simd128.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_simd128.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd128.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_simd128.o `test -f 'priv/host_generic_simd128.c' || echo '$(srcdir)/'`priv/host_generic_simd128.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd128.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd128.Po
#	$(AM_V_CC)source='priv/host_generic_simd128.c' object='priv/libvex_amd64_darwin_a-host_generic_simd128.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_simd128.o `test -f 'priv/host_generic_simd128.c' || echo '$(srcdir)/'`priv/host_generic_simd128.c

priv/libvex_amd64_darwin_a-host_generic_simd128.obj: priv/host_generic_simd128.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_simd128.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd128.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_simd128.obj `if test -f 'priv/host_generic_simd128.c'; then $(CYGPATH_W) 'priv/host_generic_simd128.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd128.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd128.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd128.Po
#	$(AM_V_CC)source='priv/host_generic_simd128.c' object='priv/libvex_amd64_darwin_a-host_generic_simd128.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_simd128.obj `if test -f 'priv/host_generic_simd128.c'; then $(CYGPATH_W) 'priv/host_generic_simd128.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd128.c'; fi`

priv/libvex_amd64_darwin_a-host_generic_simd256.o: priv/host_generic_simd256.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_simd256.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd256.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_simd256.o `test -f 'priv/host_generic_simd256.c' || echo '$(srcdir)/'`priv/host_generic_simd256.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd256.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd256.Po
#	$(AM_V_CC)source='priv/host_generic_simd256.c' object='priv/libvex_amd64_darwin_a-host_generic_simd256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_simd256.o `test -f 'priv/host_generic_simd256.c' || echo '$(srcdir)/'`priv/host_generic_simd256.c

priv/libvex_amd64_darwin_a-host_generic_simd256.obj: priv/host_generic_simd256.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_simd256.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd256.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_simd256.obj `if test -f 'priv/host_generic_simd256.c'; then $(CYGPATH_W) 'priv/host_generic_simd256.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd256.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd256.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_simd256.Po
#	$(AM_V_CC)source='priv/host_generic_simd256.c' object='priv/libvex_amd64_darwin_a-host_generic_simd256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_simd256.obj `if test -f 'priv/host_generic_simd256.c'; then $(CYGPATH_W) 'priv/host_generic_simd256.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd256.c'; fi`

priv/libvex_amd64_darwin_a-host_generic_maddf.o: priv/host_generic_maddf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_maddf.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_maddf.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_maddf.o `test -f 'priv/host_generic_maddf.c' || echo '$(srcdir)/'`priv/host_generic_maddf.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_maddf.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_maddf.Po
#	$(AM_V_CC)source='priv/host_generic_maddf.c' object='priv/libvex_amd64_darwin_a-host_generic_maddf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_maddf.o `test -f 'priv/host_generic_maddf.c' || echo '$(srcdir)/'`priv/host_generic_maddf.c

priv/libvex_amd64_darwin_a-host_generic_maddf.obj: priv/host_generic_maddf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_maddf.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_maddf.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_maddf.obj `if test -f 'priv/host_generic_maddf.c'; then $(CYGPATH_W) 'priv/host_generic_maddf.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_maddf.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_maddf.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_maddf.Po
#	$(AM_V_CC)source='priv/host_generic_maddf.c' object='priv/libvex_amd64_darwin_a-host_generic_maddf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_maddf.obj `if test -f 'priv/host_generic_maddf.c'; then $(CYGPATH_W) 'priv/host_generic_maddf.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_maddf.c'; fi`

priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.o: priv/host_generic_reg_alloc2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_reg_alloc2.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.o `test -f 'priv/host_generic_reg_alloc2.c' || echo '$(srcdir)/'`priv/host_generic_reg_alloc2.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_reg_alloc2.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_reg_alloc2.Po
#	$(AM_V_CC)source='priv/host_generic_reg_alloc2.c' object='priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.o `test -f 'priv/host_generic_reg_alloc2.c' || echo '$(srcdir)/'`priv/host_generic_reg_alloc2.c

priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.obj: priv/host_generic_reg_alloc2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_reg_alloc2.Tpo -c -o priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.obj `if test -f 'priv/host_generic_reg_alloc2.c'; then $(CYGPATH_W) 'priv/host_generic_reg_alloc2.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_reg_alloc2.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_reg_alloc2.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_generic_reg_alloc2.Po
#	$(AM_V_CC)source='priv/host_generic_reg_alloc2.c' object='priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_generic_reg_alloc2.obj `if test -f 'priv/host_generic_reg_alloc2.c'; then $(CYGPATH_W) 'priv/host_generic_reg_alloc2.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_reg_alloc2.c'; fi`

priv/libvex_amd64_darwin_a-host_x86_defs.o: priv/host_x86_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_x86_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_x86_defs.o `test -f 'priv/host_x86_defs.c' || echo '$(srcdir)/'`priv/host_x86_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_defs.Po
#	$(AM_V_CC)source='priv/host_x86_defs.c' object='priv/libvex_amd64_darwin_a-host_x86_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_x86_defs.o `test -f 'priv/host_x86_defs.c' || echo '$(srcdir)/'`priv/host_x86_defs.c

priv/libvex_amd64_darwin_a-host_x86_defs.obj: priv/host_x86_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_x86_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_x86_defs.obj `if test -f 'priv/host_x86_defs.c'; then $(CYGPATH_W) 'priv/host_x86_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_x86_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_defs.Po
#	$(AM_V_CC)source='priv/host_x86_defs.c' object='priv/libvex_amd64_darwin_a-host_x86_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_x86_defs.obj `if test -f 'priv/host_x86_defs.c'; then $(CYGPATH_W) 'priv/host_x86_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_x86_defs.c'; fi`

priv/libvex_amd64_darwin_a-host_x86_isel.o: priv/host_x86_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_x86_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_x86_isel.o `test -f 'priv/host_x86_isel.c' || echo '$(srcdir)/'`priv/host_x86_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_isel.Po
#	$(AM_V_CC)source='priv/host_x86_isel.c' object='priv/libvex_amd64_darwin_a-host_x86_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_x86_isel.o `test -f 'priv/host_x86_isel.c' || echo '$(srcdir)/'`priv/host_x86_isel.c

priv/libvex_amd64_darwin_a-host_x86_isel.obj: priv/host_x86_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_x86_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_x86_isel.obj `if test -f 'priv/host_x86_isel.c'; then $(CYGPATH_W) 'priv/host_x86_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_x86_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_x86_isel.Po
#	$(AM_V_CC)source='priv/host_x86_isel.c' object='priv/libvex_amd64_darwin_a-host_x86_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_x86_isel.obj `if test -f 'priv/host_x86_isel.c'; then $(CYGPATH_W) 'priv/host_x86_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_x86_isel.c'; fi`

priv/libvex_amd64_darwin_a-host_amd64_defs.o: priv/host_amd64_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_amd64_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_amd64_defs.o `test -f 'priv/host_amd64_defs.c' || echo '$(srcdir)/'`priv/host_amd64_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_defs.Po
#	$(AM_V_CC)source='priv/host_amd64_defs.c' object='priv/libvex_amd64_darwin_a-host_amd64_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_amd64_defs.o `test -f 'priv/host_amd64_defs.c' || echo '$(srcdir)/'`priv/host_amd64_defs.c

priv/libvex_amd64_darwin_a-host_amd64_defs.obj: priv/host_amd64_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_amd64_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_amd64_defs.obj `if test -f 'priv/host_amd64_defs.c'; then $(CYGPATH_W) 'priv/host_amd64_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_amd64_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_defs.Po
#	$(AM_V_CC)source='priv/host_amd64_defs.c' object='priv/libvex_amd64_darwin_a-host_amd64_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_amd64_defs.obj `if test -f 'priv/host_amd64_defs.c'; then $(CYGPATH_W) 'priv/host_amd64_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_amd64_defs.c'; fi`

priv/libvex_amd64_darwin_a-host_amd64_isel.o: priv/host_amd64_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_amd64_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_amd64_isel.o `test -f 'priv/host_amd64_isel.c' || echo '$(srcdir)/'`priv/host_amd64_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_isel.Po
#	$(AM_V_CC)source='priv/host_amd64_isel.c' object='priv/libvex_amd64_darwin_a-host_amd64_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_amd64_isel.o `test -f 'priv/host_amd64_isel.c' || echo '$(srcdir)/'`priv/host_amd64_isel.c

priv/libvex_amd64_darwin_a-host_amd64_isel.obj: priv/host_amd64_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_amd64_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_amd64_isel.obj `if test -f 'priv/host_amd64_isel.c'; then $(CYGPATH_W) 'priv/host_amd64_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_amd64_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_amd64_isel.Po
#	$(AM_V_CC)source='priv/host_amd64_isel.c' object='priv/libvex_amd64_darwin_a-host_amd64_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_amd64_isel.obj `if test -f 'priv/host_amd64_isel.c'; then $(CYGPATH_W) 'priv/host_amd64_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_amd64_isel.c'; fi`

priv/libvex_amd64_darwin_a-host_ppc_defs.o: priv/host_ppc_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_ppc_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_ppc_defs.o `test -f 'priv/host_ppc_defs.c' || echo '$(srcdir)/'`priv/host_ppc_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_defs.Po
#	$(AM_V_CC)source='priv/host_ppc_defs.c' object='priv/libvex_amd64_darwin_a-host_ppc_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_ppc_defs.o `test -f 'priv/host_ppc_defs.c' || echo '$(srcdir)/'`priv/host_ppc_defs.c

priv/libvex_amd64_darwin_a-host_ppc_defs.obj: priv/host_ppc_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_ppc_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_ppc_defs.obj `if test -f 'priv/host_ppc_defs.c'; then $(CYGPATH_W) 'priv/host_ppc_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_ppc_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_defs.Po
#	$(AM_V_CC)source='priv/host_ppc_defs.c' object='priv/libvex_amd64_darwin_a-host_ppc_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_ppc_defs.obj `if test -f 'priv/host_ppc_defs.c'; then $(CYGPATH_W) 'priv/host_ppc_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_ppc_defs.c'; fi`

priv/libvex_amd64_darwin_a-host_ppc_isel.o: priv/host_ppc_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_ppc_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_ppc_isel.o `test -f 'priv/host_ppc_isel.c' || echo '$(srcdir)/'`priv/host_ppc_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_isel.Po
#	$(AM_V_CC)source='priv/host_ppc_isel.c' object='priv/libvex_amd64_darwin_a-host_ppc_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_ppc_isel.o `test -f 'priv/host_ppc_isel.c' || echo '$(srcdir)/'`priv/host_ppc_isel.c

priv/libvex_amd64_darwin_a-host_ppc_isel.obj: priv/host_ppc_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_ppc_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_ppc_isel.obj `if test -f 'priv/host_ppc_isel.c'; then $(CYGPATH_W) 'priv/host_ppc_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_ppc_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_ppc_isel.Po
#	$(AM_V_CC)source='priv/host_ppc_isel.c' object='priv/libvex_amd64_darwin_a-host_ppc_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_ppc_isel.obj `if test -f 'priv/host_ppc_isel.c'; then $(CYGPATH_W) 'priv/host_ppc_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_ppc_isel.c'; fi`

priv/libvex_amd64_darwin_a-host_arm_defs.o: priv/host_arm_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_arm_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_arm_defs.o `test -f 'priv/host_arm_defs.c' || echo '$(srcdir)/'`priv/host_arm_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_defs.Po
#	$(AM_V_CC)source='priv/host_arm_defs.c' object='priv/libvex_amd64_darwin_a-host_arm_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_arm_defs.o `test -f 'priv/host_arm_defs.c' || echo '$(srcdir)/'`priv/host_arm_defs.c

priv/libvex_amd64_darwin_a-host_arm_defs.obj: priv/host_arm_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_arm_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_arm_defs.obj `if test -f 'priv/host_arm_defs.c'; then $(CYGPATH_W) 'priv/host_arm_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_defs.Po
#	$(AM_V_CC)source='priv/host_arm_defs.c' object='priv/libvex_amd64_darwin_a-host_arm_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_arm_defs.obj `if test -f 'priv/host_arm_defs.c'; then $(CYGPATH_W) 'priv/host_arm_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm_defs.c'; fi`

priv/libvex_amd64_darwin_a-host_arm_isel.o: priv/host_arm_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_arm_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_arm_isel.o `test -f 'priv/host_arm_isel.c' || echo '$(srcdir)/'`priv/host_arm_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_isel.Po
#	$(AM_V_CC)source='priv/host_arm_isel.c' object='priv/libvex_amd64_darwin_a-host_arm_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_arm_isel.o `test -f 'priv/host_arm_isel.c' || echo '$(srcdir)/'`priv/host_arm_isel.c

priv/libvex_amd64_darwin_a-host_arm_isel.obj: priv/host_arm_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_arm_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_arm_isel.obj `if test -f 'priv/host_arm_isel.c'; then $(CYGPATH_W) 'priv/host_arm_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm_isel.Po
#	$(AM_V_CC)source='priv/host_arm_isel.c' object='priv/libvex_amd64_darwin_a-host_arm_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_arm_isel.obj `if test -f 'priv/host_arm_isel.c'; then $(CYGPATH_W) 'priv/host_arm_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm_isel.c'; fi`

priv/libvex_amd64_darwin_a-host_arm64_defs.o: priv/host_arm64_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_arm64_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_arm64_defs.o `test -f 'priv/host_arm64_defs.c' || echo '$(srcdir)/'`priv/host_arm64_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_defs.Po
#	$(AM_V_CC)source='priv/host_arm64_defs.c' object='priv/libvex_amd64_darwin_a-host_arm64_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_arm64_defs.o `test -f 'priv/host_arm64_defs.c' || echo '$(srcdir)/'`priv/host_arm64_defs.c

priv/libvex_amd64_darwin_a-host_arm64_defs.obj: priv/host_arm64_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_arm64_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_arm64_defs.obj `if test -f 'priv/host_arm64_defs.c'; then $(CYGPATH_W) 'priv/host_arm64_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm64_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_defs.Po
#	$(AM_V_CC)source='priv/host_arm64_defs.c' object='priv/libvex_amd64_darwin_a-host_arm64_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_arm64_defs.obj `if test -f 'priv/host_arm64_defs.c'; then $(CYGPATH_W) 'priv/host_arm64_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm64_defs.c'; fi`

priv/libvex_amd64_darwin_a-host_arm64_isel.o: priv/host_arm64_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_arm64_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_arm64_isel.o `test -f 'priv/host_arm64_isel.c' || echo '$(srcdir)/'`priv/host_arm64_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_isel.Po
#	$(AM_V_CC)source='priv/host_arm64_isel.c' object='priv/libvex_amd64_darwin_a-host_arm64_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_arm64_isel.o `test -f 'priv/host_arm64_isel.c' || echo '$(srcdir)/'`priv/host_arm64_isel.c

priv/libvex_amd64_darwin_a-host_arm64_isel.obj: priv/host_arm64_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_arm64_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_arm64_isel.obj `if test -f 'priv/host_arm64_isel.c'; then $(CYGPATH_W) 'priv/host_arm64_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm64_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_arm64_isel.Po
#	$(AM_V_CC)source='priv/host_arm64_isel.c' object='priv/libvex_amd64_darwin_a-host_arm64_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_arm64_isel.obj `if test -f 'priv/host_arm64_isel.c'; then $(CYGPATH_W) 'priv/host_arm64_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm64_isel.c'; fi`

priv/libvex_amd64_darwin_a-host_s390_defs.o: priv/host_s390_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_s390_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_s390_defs.o `test -f 'priv/host_s390_defs.c' || echo '$(srcdir)/'`priv/host_s390_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_defs.Po
#	$(AM_V_CC)source='priv/host_s390_defs.c' object='priv/libvex_amd64_darwin_a-host_s390_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_s390_defs.o `test -f 'priv/host_s390_defs.c' || echo '$(srcdir)/'`priv/host_s390_defs.c

priv/libvex_amd64_darwin_a-host_s390_defs.obj: priv/host_s390_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_s390_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_s390_defs.obj `if test -f 'priv/host_s390_defs.c'; then $(CYGPATH_W) 'priv/host_s390_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_s390_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_defs.Po
#	$(AM_V_CC)source='priv/host_s390_defs.c' object='priv/libvex_amd64_darwin_a-host_s390_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_s390_defs.obj `if test -f 'priv/host_s390_defs.c'; then $(CYGPATH_W) 'priv/host_s390_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_s390_defs.c'; fi`

priv/libvex_amd64_darwin_a-host_s390_isel.o: priv/host_s390_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_s390_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_s390_isel.o `test -f 'priv/host_s390_isel.c' || echo '$(srcdir)/'`priv/host_s390_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_isel.Po
#	$(AM_V_CC)source='priv/host_s390_isel.c' object='priv/libvex_amd64_darwin_a-host_s390_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_s390_isel.o `test -f 'priv/host_s390_isel.c' || echo '$(srcdir)/'`priv/host_s390_isel.c

priv/libvex_amd64_darwin_a-host_s390_isel.obj: priv/host_s390_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_s390_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_s390_isel.obj `if test -f 'priv/host_s390_isel.c'; then $(CYGPATH_W) 'priv/host_s390_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_s390_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_s390_isel.Po
#	$(AM_V_CC)source='priv/host_s390_isel.c' object='priv/libvex_amd64_darwin_a-host_s390_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_s390_isel.obj `if test -f 'priv/host_s390_isel.c'; then $(CYGPATH_W) 'priv/host_s390_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_s390_isel.c'; fi`

priv/libvex_amd64_darwin_a-s390_disasm.o: priv/s390_disasm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-s390_disasm.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-s390_disasm.Tpo -c -o priv/libvex_amd64_darwin_a-s390_disasm.o `test -f 'priv/s390_disasm.c' || echo '$(srcdir)/'`priv/s390_disasm.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-s390_disasm.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-s390_disasm.Po
#	$(AM_V_CC)source='priv/s390_disasm.c' object='priv/libvex_amd64_darwin_a-s390_disasm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-s390_disasm.o `test -f 'priv/s390_disasm.c' || echo '$(srcdir)/'`priv/s390_disasm.c

priv/libvex_amd64_darwin_a-s390_disasm.obj: priv/s390_disasm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-s390_disasm.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-s390_disasm.Tpo -c -o priv/libvex_amd64_darwin_a-s390_disasm.obj `if test -f 'priv/s390_disasm.c'; then $(CYGPATH_W) 'priv/s390_disasm.c'; else $(CYGPATH_W) '$(srcdir)/priv/s390_disasm.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-s390_disasm.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-s390_disasm.Po
#	$(AM_V_CC)source='priv/s390_disasm.c' object='priv/libvex_amd64_darwin_a-s390_disasm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-s390_disasm.obj `if test -f 'priv/s390_disasm.c'; then $(CYGPATH_W) 'priv/s390_disasm.c'; else $(CYGPATH_W) '$(srcdir)/priv/s390_disasm.c'; fi`

priv/libvex_amd64_darwin_a-host_mips_defs.o: priv/host_mips_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_mips_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_mips_defs.o `test -f 'priv/host_mips_defs.c' || echo '$(srcdir)/'`priv/host_mips_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_defs.Po
#	$(AM_V_CC)source='priv/host_mips_defs.c' object='priv/libvex_amd64_darwin_a-host_mips_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_mips_defs.o `test -f 'priv/host_mips_defs.c' || echo '$(srcdir)/'`priv/host_mips_defs.c

priv/libvex_amd64_darwin_a-host_mips_defs.obj: priv/host_mips_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_mips_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_defs.Tpo -c -o priv/libvex_amd64_darwin_a-host_mips_defs.obj `if test -f 'priv/host_mips_defs.c'; then $(CYGPATH_W) 'priv/host_mips_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_mips_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_defs.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_defs.Po
#	$(AM_V_CC)source='priv/host_mips_defs.c' object='priv/libvex_amd64_darwin_a-host_mips_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_mips_defs.obj `if test -f 'priv/host_mips_defs.c'; then $(CYGPATH_W) 'priv/host_mips_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_mips_defs.c'; fi`

priv/libvex_amd64_darwin_a-host_mips_isel.o: priv/host_mips_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_mips_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_mips_isel.o `test -f 'priv/host_mips_isel.c' || echo '$(srcdir)/'`priv/host_mips_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_isel.Po
#	$(AM_V_CC)source='priv/host_mips_isel.c' object='priv/libvex_amd64_darwin_a-host_mips_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_mips_isel.o `test -f 'priv/host_mips_isel.c' || echo '$(srcdir)/'`priv/host_mips_isel.c

priv/libvex_amd64_darwin_a-host_mips_isel.obj: priv/host_mips_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_amd64_darwin_a-host_mips_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_isel.Tpo -c -o priv/libvex_amd64_darwin_a-host_mips_isel.obj `if test -f 'priv/host_mips_isel.c'; then $(CYGPATH_W) 'priv/host_mips_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_mips_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_isel.Tpo priv/$(DEPDIR)/libvex_amd64_darwin_a-host_mips_isel.Po
#	$(AM_V_CC)source='priv/host_mips_isel.c' object='priv/libvex_amd64_darwin_a-host_mips_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_amd64_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_amd64_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_amd64_darwin_a-host_mips_isel.obj `if test -f 'priv/host_mips_isel.c'; then $(CYGPATH_W) 'priv/host_mips_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_mips_isel.c'; fi`

priv/libvex_x86_darwin_a-main_globals.o: priv/main_globals.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-main_globals.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-main_globals.Tpo -c -o priv/libvex_x86_darwin_a-main_globals.o `test -f 'priv/main_globals.c' || echo '$(srcdir)/'`priv/main_globals.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-main_globals.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-main_globals.Po
#	$(AM_V_CC)source='priv/main_globals.c' object='priv/libvex_x86_darwin_a-main_globals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-main_globals.o `test -f 'priv/main_globals.c' || echo '$(srcdir)/'`priv/main_globals.c

priv/libvex_x86_darwin_a-main_globals.obj: priv/main_globals.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-main_globals.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-main_globals.Tpo -c -o priv/libvex_x86_darwin_a-main_globals.obj `if test -f 'priv/main_globals.c'; then $(CYGPATH_W) 'priv/main_globals.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_globals.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-main_globals.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-main_globals.Po
#	$(AM_V_CC)source='priv/main_globals.c' object='priv/libvex_x86_darwin_a-main_globals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-main_globals.obj `if test -f 'priv/main_globals.c'; then $(CYGPATH_W) 'priv/main_globals.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_globals.c'; fi`

priv/libvex_x86_darwin_a-main_main.o: priv/main_main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-main_main.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-main_main.Tpo -c -o priv/libvex_x86_darwin_a-main_main.o `test -f 'priv/main_main.c' || echo '$(srcdir)/'`priv/main_main.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-main_main.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-main_main.Po
#	$(AM_V_CC)source='priv/main_main.c' object='priv/libvex_x86_darwin_a-main_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-main_main.o `test -f 'priv/main_main.c' || echo '$(srcdir)/'`priv/main_main.c

priv/libvex_x86_darwin_a-main_main.obj: priv/main_main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-main_main.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-main_main.Tpo -c -o priv/libvex_x86_darwin_a-main_main.obj `if test -f 'priv/main_main.c'; then $(CYGPATH_W) 'priv/main_main.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_main.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-main_main.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-main_main.Po
#	$(AM_V_CC)source='priv/main_main.c' object='priv/libvex_x86_darwin_a-main_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-main_main.obj `if test -f 'priv/main_main.c'; then $(CYGPATH_W) 'priv/main_main.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_main.c'; fi`

priv/libvex_x86_darwin_a-main_util.o: priv/main_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-main_util.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-main_util.Tpo -c -o priv/libvex_x86_darwin_a-main_util.o `test -f 'priv/main_util.c' || echo '$(srcdir)/'`priv/main_util.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-main_util.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-main_util.Po
#	$(AM_V_CC)source='priv/main_util.c' object='priv/libvex_x86_darwin_a-main_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-main_util.o `test -f 'priv/main_util.c' || echo '$(srcdir)/'`priv/main_util.c

priv/libvex_x86_darwin_a-main_util.obj: priv/main_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-main_util.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-main_util.Tpo -c -o priv/libvex_x86_darwin_a-main_util.obj `if test -f 'priv/main_util.c'; then $(CYGPATH_W) 'priv/main_util.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_util.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-main_util.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-main_util.Po
#	$(AM_V_CC)source='priv/main_util.c' object='priv/libvex_x86_darwin_a-main_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-main_util.obj `if test -f 'priv/main_util.c'; then $(CYGPATH_W) 'priv/main_util.c'; else $(CYGPATH_W) '$(srcdir)/priv/main_util.c'; fi`

priv/libvex_x86_darwin_a-ir_defs.o: priv/ir_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-ir_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-ir_defs.Tpo -c -o priv/libvex_x86_darwin_a-ir_defs.o `test -f 'priv/ir_defs.c' || echo '$(srcdir)/'`priv/ir_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-ir_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-ir_defs.Po
#	$(AM_V_CC)source='priv/ir_defs.c' object='priv/libvex_x86_darwin_a-ir_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-ir_defs.o `test -f 'priv/ir_defs.c' || echo '$(srcdir)/'`priv/ir_defs.c

priv/libvex_x86_darwin_a-ir_defs.obj: priv/ir_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-ir_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-ir_defs.Tpo -c -o priv/libvex_x86_darwin_a-ir_defs.obj `if test -f 'priv/ir_defs.c'; then $(CYGPATH_W) 'priv/ir_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-ir_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-ir_defs.Po
#	$(AM_V_CC)source='priv/ir_defs.c' object='priv/libvex_x86_darwin_a-ir_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-ir_defs.obj `if test -f 'priv/ir_defs.c'; then $(CYGPATH_W) 'priv/ir_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_defs.c'; fi`

priv/libvex_x86_darwin_a-ir_inject.o: priv/ir_inject.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-ir_inject.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-ir_inject.Tpo -c -o priv/libvex_x86_darwin_a-ir_inject.o `test -f 'priv/ir_inject.c' || echo '$(srcdir)/'`priv/ir_inject.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-ir_inject.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-ir_inject.Po
#	$(AM_V_CC)source='priv/ir_inject.c' object='priv/libvex_x86_darwin_a-ir_inject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-ir_inject.o `test -f 'priv/ir_inject.c' || echo '$(srcdir)/'`priv/ir_inject.c

priv/libvex_x86_darwin_a-ir_inject.obj: priv/ir_inject.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-ir_inject.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-ir_inject.Tpo -c -o priv/libvex_x86_darwin_a-ir_inject.obj `if test -f 'priv/ir_inject.c'; then $(CYGPATH_W) 'priv/ir_inject.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_inject.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-ir_inject.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-ir_inject.Po
#	$(AM_V_CC)source='priv/ir_inject.c' object='priv/libvex_x86_darwin_a-ir_inject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-ir_inject.obj `if test -f 'priv/ir_inject.c'; then $(CYGPATH_W) 'priv/ir_inject.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_inject.c'; fi`

priv/libvex_x86_darwin_a-ir_match.o: priv/ir_match.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-ir_match.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-ir_match.Tpo -c -o priv/libvex_x86_darwin_a-ir_match.o `test -f 'priv/ir_match.c' || echo '$(srcdir)/'`priv/ir_match.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-ir_match.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-ir_match.Po
#	$(AM_V_CC)source='priv/ir_match.c' object='priv/libvex_x86_darwin_a-ir_match.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-ir_match.o `test -f 'priv/ir_match.c' || echo '$(srcdir)/'`priv/ir_match.c

priv/libvex_x86_darwin_a-ir_match.obj: priv/ir_match.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-ir_match.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-ir_match.Tpo -c -o priv/libvex_x86_darwin_a-ir_match.obj `if test -f 'priv/ir_match.c'; then $(CYGPATH_W) 'priv/ir_match.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_match.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-ir_match.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-ir_match.Po
#	$(AM_V_CC)source='priv/ir_match.c' object='priv/libvex_x86_darwin_a-ir_match.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-ir_match.obj `if test -f 'priv/ir_match.c'; then $(CYGPATH_W) 'priv/ir_match.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_match.c'; fi`

priv/libvex_x86_darwin_a-ir_opt.o: priv/ir_opt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-ir_opt.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-ir_opt.Tpo -c -o priv/libvex_x86_darwin_a-ir_opt.o `test -f 'priv/ir_opt.c' || echo '$(srcdir)/'`priv/ir_opt.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-ir_opt.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-ir_opt.Po
#	$(AM_V_CC)source='priv/ir_opt.c' object='priv/libvex_x86_darwin_a-ir_opt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-ir_opt.o `test -f 'priv/ir_opt.c' || echo '$(srcdir)/'`priv/ir_opt.c

priv/libvex_x86_darwin_a-ir_opt.obj: priv/ir_opt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-ir_opt.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-ir_opt.Tpo -c -o priv/libvex_x86_darwin_a-ir_opt.obj `if test -f 'priv/ir_opt.c'; then $(CYGPATH_W) 'priv/ir_opt.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_opt.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-ir_opt.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-ir_opt.Po
#	$(AM_V_CC)source='priv/ir_opt.c' object='priv/libvex_x86_darwin_a-ir_opt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-ir_opt.obj `if test -f 'priv/ir_opt.c'; then $(CYGPATH_W) 'priv/ir_opt.c'; else $(CYGPATH_W) '$(srcdir)/priv/ir_opt.c'; fi`

priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.o: priv/guest_generic_bb_to_IR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_bb_to_IR.Tpo -c -o priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.o `test -f 'priv/guest_generic_bb_to_IR.c' || echo '$(srcdir)/'`priv/guest_generic_bb_to_IR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_bb_to_IR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_bb_to_IR.Po
#	$(AM_V_CC)source='priv/guest_generic_bb_to_IR.c' object='priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.o `test -f 'priv/guest_generic_bb_to_IR.c' || echo '$(srcdir)/'`priv/guest_generic_bb_to_IR.c

priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.obj: priv/guest_generic_bb_to_IR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_bb_to_IR.Tpo -c -o priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.obj `if test -f 'priv/guest_generic_bb_to_IR.c'; then $(CYGPATH_W) 'priv/guest_generic_bb_to_IR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_generic_bb_to_IR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_bb_to_IR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_bb_to_IR.Po
#	$(AM_V_CC)source='priv/guest_generic_bb_to_IR.c' object='priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_generic_bb_to_IR.obj `if test -f 'priv/guest_generic_bb_to_IR.c'; then $(CYGPATH_W) 'priv/guest_generic_bb_to_IR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_generic_bb_to_IR.c'; fi`

priv/libvex_x86_darwin_a-guest_generic_x87.o: priv/guest_generic_x87.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_generic_x87.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_x87.Tpo -c -o priv/libvex_x86_darwin_a-guest_generic_x87.o `test -f 'priv/guest_generic_x87.c' || echo '$(srcdir)/'`priv/guest_generic_x87.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_x87.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_x87.Po
#	$(AM_V_CC)source='priv/guest_generic_x87.c' object='priv/libvex_x86_darwin_a-guest_generic_x87.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_generic_x87.o `test -f 'priv/guest_generic_x87.c' || echo '$(srcdir)/'`priv/guest_generic_x87.c

priv/libvex_x86_darwin_a-guest_generic_x87.obj: priv/guest_generic_x87.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_generic_x87.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_x87.Tpo -c -o priv/libvex_x86_darwin_a-guest_generic_x87.obj `if test -f 'priv/guest_generic_x87.c'; then $(CYGPATH_W) 'priv/guest_generic_x87.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_generic_x87.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_x87.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_generic_x87.Po
#	$(AM_V_CC)source='priv/guest_generic_x87.c' object='priv/libvex_x86_darwin_a-guest_generic_x87.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_generic_x87.obj `if test -f 'priv/guest_generic_x87.c'; then $(CYGPATH_W) 'priv/guest_generic_x87.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_generic_x87.c'; fi`

priv/libvex_x86_darwin_a-guest_x86_helpers.o: priv/guest_x86_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_x86_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_x86_helpers.o `test -f 'priv/guest_x86_helpers.c' || echo '$(srcdir)/'`priv/guest_x86_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_helpers.Po
#	$(AM_V_CC)source='priv/guest_x86_helpers.c' object='priv/libvex_x86_darwin_a-guest_x86_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_x86_helpers.o `test -f 'priv/guest_x86_helpers.c' || echo '$(srcdir)/'`priv/guest_x86_helpers.c

priv/libvex_x86_darwin_a-guest_x86_helpers.obj: priv/guest_x86_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_x86_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_x86_helpers.obj `if test -f 'priv/guest_x86_helpers.c'; then $(CYGPATH_W) 'priv/guest_x86_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_x86_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_helpers.Po
#	$(AM_V_CC)source='priv/guest_x86_helpers.c' object='priv/libvex_x86_darwin_a-guest_x86_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_x86_helpers.obj `if test -f 'priv/guest_x86_helpers.c'; then $(CYGPATH_W) 'priv/guest_x86_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_x86_helpers.c'; fi`

priv/libvex_x86_darwin_a-guest_x86_toIR.o: priv/guest_x86_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_x86_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_x86_toIR.o `test -f 'priv/guest_x86_toIR.c' || echo '$(srcdir)/'`priv/guest_x86_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_toIR.Po
#	$(AM_V_CC)source='priv/guest_x86_toIR.c' object='priv/libvex_x86_darwin_a-guest_x86_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_x86_toIR.o `test -f 'priv/guest_x86_toIR.c' || echo '$(srcdir)/'`priv/guest_x86_toIR.c

priv/libvex_x86_darwin_a-guest_x86_toIR.obj: priv/guest_x86_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_x86_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_x86_toIR.obj `if test -f 'priv/guest_x86_toIR.c'; then $(CYGPATH_W) 'priv/guest_x86_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_x86_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_x86_toIR.Po
#	$(AM_V_CC)source='priv/guest_x86_toIR.c' object='priv/libvex_x86_darwin_a-guest_x86_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_x86_toIR.obj `if test -f 'priv/guest_x86_toIR.c'; then $(CYGPATH_W) 'priv/guest_x86_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_x86_toIR.c'; fi`

priv/libvex_x86_darwin_a-guest_amd64_helpers.o: priv/guest_amd64_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_amd64_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_amd64_helpers.o `test -f 'priv/guest_amd64_helpers.c' || echo '$(srcdir)/'`priv/guest_amd64_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_helpers.Po
#	$(AM_V_CC)source='priv/guest_amd64_helpers.c' object='priv/libvex_x86_darwin_a-guest_amd64_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_amd64_helpers.o `test -f 'priv/guest_amd64_helpers.c' || echo '$(srcdir)/'`priv/guest_amd64_helpers.c

priv/libvex_x86_darwin_a-guest_amd64_helpers.obj: priv/guest_amd64_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_amd64_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_amd64_helpers.obj `if test -f 'priv/guest_amd64_helpers.c'; then $(CYGPATH_W) 'priv/guest_amd64_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_amd64_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_helpers.Po
#	$(AM_V_CC)source='priv/guest_amd64_helpers.c' object='priv/libvex_x86_darwin_a-guest_amd64_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_amd64_helpers.obj `if test -f 'priv/guest_amd64_helpers.c'; then $(CYGPATH_W) 'priv/guest_amd64_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_amd64_helpers.c'; fi`

priv/libvex_x86_darwin_a-guest_amd64_toIR.o: priv/guest_amd64_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_amd64_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_amd64_toIR.o `test -f 'priv/guest_amd64_toIR.c' || echo '$(srcdir)/'`priv/guest_amd64_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_toIR.Po
#	$(AM_V_CC)source='priv/guest_amd64_toIR.c' object='priv/libvex_x86_darwin_a-guest_amd64_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_amd64_toIR.o `test -f 'priv/guest_amd64_toIR.c' || echo '$(srcdir)/'`priv/guest_amd64_toIR.c

priv/libvex_x86_darwin_a-guest_amd64_toIR.obj: priv/guest_amd64_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_amd64_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_amd64_toIR.obj `if test -f 'priv/guest_amd64_toIR.c'; then $(CYGPATH_W) 'priv/guest_amd64_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_amd64_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_amd64_toIR.Po
#	$(AM_V_CC)source='priv/guest_amd64_toIR.c' object='priv/libvex_x86_darwin_a-guest_amd64_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_amd64_toIR.obj `if test -f 'priv/guest_amd64_toIR.c'; then $(CYGPATH_W) 'priv/guest_amd64_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_amd64_toIR.c'; fi`

priv/libvex_x86_darwin_a-guest_ppc_helpers.o: priv/guest_ppc_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_ppc_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_ppc_helpers.o `test -f 'priv/guest_ppc_helpers.c' || echo '$(srcdir)/'`priv/guest_ppc_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_helpers.Po
#	$(AM_V_CC)source='priv/guest_ppc_helpers.c' object='priv/libvex_x86_darwin_a-guest_ppc_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_ppc_helpers.o `test -f 'priv/guest_ppc_helpers.c' || echo '$(srcdir)/'`priv/guest_ppc_helpers.c

priv/libvex_x86_darwin_a-guest_ppc_helpers.obj: priv/guest_ppc_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_ppc_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_ppc_helpers.obj `if test -f 'priv/guest_ppc_helpers.c'; then $(CYGPATH_W) 'priv/guest_ppc_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_ppc_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_helpers.Po
#	$(AM_V_CC)source='priv/guest_ppc_helpers.c' object='priv/libvex_x86_darwin_a-guest_ppc_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_ppc_helpers.obj `if test -f 'priv/guest_ppc_helpers.c'; then $(CYGPATH_W) 'priv/guest_ppc_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_ppc_helpers.c'; fi`

priv/libvex_x86_darwin_a-guest_ppc_toIR.o: priv/guest_ppc_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_ppc_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_ppc_toIR.o `test -f 'priv/guest_ppc_toIR.c' || echo '$(srcdir)/'`priv/guest_ppc_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_toIR.Po
#	$(AM_V_CC)source='priv/guest_ppc_toIR.c' object='priv/libvex_x86_darwin_a-guest_ppc_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_ppc_toIR.o `test -f 'priv/guest_ppc_toIR.c' || echo '$(srcdir)/'`priv/guest_ppc_toIR.c

priv/libvex_x86_darwin_a-guest_ppc_toIR.obj: priv/guest_ppc_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_ppc_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_ppc_toIR.obj `if test -f 'priv/guest_ppc_toIR.c'; then $(CYGPATH_W) 'priv/guest_ppc_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_ppc_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_ppc_toIR.Po
#	$(AM_V_CC)source='priv/guest_ppc_toIR.c' object='priv/libvex_x86_darwin_a-guest_ppc_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_ppc_toIR.obj `if test -f 'priv/guest_ppc_toIR.c'; then $(CYGPATH_W) 'priv/guest_ppc_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_ppc_toIR.c'; fi`

priv/libvex_x86_darwin_a-guest_arm_helpers.o: priv/guest_arm_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_arm_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_arm_helpers.o `test -f 'priv/guest_arm_helpers.c' || echo '$(srcdir)/'`priv/guest_arm_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_helpers.Po
#	$(AM_V_CC)source='priv/guest_arm_helpers.c' object='priv/libvex_x86_darwin_a-guest_arm_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_arm_helpers.o `test -f 'priv/guest_arm_helpers.c' || echo '$(srcdir)/'`priv/guest_arm_helpers.c

priv/libvex_x86_darwin_a-guest_arm_helpers.obj: priv/guest_arm_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_arm_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_arm_helpers.obj `if test -f 'priv/guest_arm_helpers.c'; then $(CYGPATH_W) 'priv/guest_arm_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_helpers.Po
#	$(AM_V_CC)source='priv/guest_arm_helpers.c' object='priv/libvex_x86_darwin_a-guest_arm_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_arm_helpers.obj `if test -f 'priv/guest_arm_helpers.c'; then $(CYGPATH_W) 'priv/guest_arm_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm_helpers.c'; fi`

priv/libvex_x86_darwin_a-guest_arm_toIR.o: priv/guest_arm_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_arm_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_arm_toIR.o `test -f 'priv/guest_arm_toIR.c' || echo '$(srcdir)/'`priv/guest_arm_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_toIR.Po
#	$(AM_V_CC)source='priv/guest_arm_toIR.c' object='priv/libvex_x86_darwin_a-guest_arm_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_arm_toIR.o `test -f 'priv/guest_arm_toIR.c' || echo '$(srcdir)/'`priv/guest_arm_toIR.c

priv/libvex_x86_darwin_a-guest_arm_toIR.obj: priv/guest_arm_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_arm_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_arm_toIR.obj `if test -f 'priv/guest_arm_toIR.c'; then $(CYGPATH_W) 'priv/guest_arm_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm_toIR.Po
#	$(AM_V_CC)source='priv/guest_arm_toIR.c' object='priv/libvex_x86_darwin_a-guest_arm_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_arm_toIR.obj `if test -f 'priv/guest_arm_toIR.c'; then $(CYGPATH_W) 'priv/guest_arm_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm_toIR.c'; fi`

priv/libvex_x86_darwin_a-guest_arm64_helpers.o: priv/guest_arm64_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_arm64_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_arm64_helpers.o `test -f 'priv/guest_arm64_helpers.c' || echo '$(srcdir)/'`priv/guest_arm64_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_helpers.Po
#	$(AM_V_CC)source='priv/guest_arm64_helpers.c' object='priv/libvex_x86_darwin_a-guest_arm64_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_arm64_helpers.o `test -f 'priv/guest_arm64_helpers.c' || echo '$(srcdir)/'`priv/guest_arm64_helpers.c

priv/libvex_x86_darwin_a-guest_arm64_helpers.obj: priv/guest_arm64_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_arm64_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_arm64_helpers.obj `if test -f 'priv/guest_arm64_helpers.c'; then $(CYGPATH_W) 'priv/guest_arm64_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm64_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_helpers.Po
#	$(AM_V_CC)source='priv/guest_arm64_helpers.c' object='priv/libvex_x86_darwin_a-guest_arm64_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_arm64_helpers.obj `if test -f 'priv/guest_arm64_helpers.c'; then $(CYGPATH_W) 'priv/guest_arm64_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm64_helpers.c'; fi`

priv/libvex_x86_darwin_a-guest_arm64_toIR.o: priv/guest_arm64_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_arm64_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_arm64_toIR.o `test -f 'priv/guest_arm64_toIR.c' || echo '$(srcdir)/'`priv/guest_arm64_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_toIR.Po
#	$(AM_V_CC)source='priv/guest_arm64_toIR.c' object='priv/libvex_x86_darwin_a-guest_arm64_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_arm64_toIR.o `test -f 'priv/guest_arm64_toIR.c' || echo '$(srcdir)/'`priv/guest_arm64_toIR.c

priv/libvex_x86_darwin_a-guest_arm64_toIR.obj: priv/guest_arm64_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_arm64_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_arm64_toIR.obj `if test -f 'priv/guest_arm64_toIR.c'; then $(CYGPATH_W) 'priv/guest_arm64_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm64_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_arm64_toIR.Po
#	$(AM_V_CC)source='priv/guest_arm64_toIR.c' object='priv/libvex_x86_darwin_a-guest_arm64_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_arm64_toIR.obj `if test -f 'priv/guest_arm64_toIR.c'; then $(CYGPATH_W) 'priv/guest_arm64_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_arm64_toIR.c'; fi`

priv/libvex_x86_darwin_a-guest_s390_helpers.o: priv/guest_s390_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_s390_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_s390_helpers.o `test -f 'priv/guest_s390_helpers.c' || echo '$(srcdir)/'`priv/guest_s390_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_helpers.Po
#	$(AM_V_CC)source='priv/guest_s390_helpers.c' object='priv/libvex_x86_darwin_a-guest_s390_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_s390_helpers.o `test -f 'priv/guest_s390_helpers.c' || echo '$(srcdir)/'`priv/guest_s390_helpers.c

priv/libvex_x86_darwin_a-guest_s390_helpers.obj: priv/guest_s390_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_s390_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_s390_helpers.obj `if test -f 'priv/guest_s390_helpers.c'; then $(CYGPATH_W) 'priv/guest_s390_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_s390_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_helpers.Po
#	$(AM_V_CC)source='priv/guest_s390_helpers.c' object='priv/libvex_x86_darwin_a-guest_s390_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_s390_helpers.obj `if test -f 'priv/guest_s390_helpers.c'; then $(CYGPATH_W) 'priv/guest_s390_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_s390_helpers.c'; fi`

priv/libvex_x86_darwin_a-guest_s390_toIR.o: priv/guest_s390_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_s390_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_s390_toIR.o `test -f 'priv/guest_s390_toIR.c' || echo '$(srcdir)/'`priv/guest_s390_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_toIR.Po
#	$(AM_V_CC)source='priv/guest_s390_toIR.c' object='priv/libvex_x86_darwin_a-guest_s390_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_s390_toIR.o `test -f 'priv/guest_s390_toIR.c' || echo '$(srcdir)/'`priv/guest_s390_toIR.c

priv/libvex_x86_darwin_a-guest_s390_toIR.obj: priv/guest_s390_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_s390_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_s390_toIR.obj `if test -f 'priv/guest_s390_toIR.c'; then $(CYGPATH_W) 'priv/guest_s390_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_s390_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_s390_toIR.Po
#	$(AM_V_CC)source='priv/guest_s390_toIR.c' object='priv/libvex_x86_darwin_a-guest_s390_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_s390_toIR.obj `if test -f 'priv/guest_s390_toIR.c'; then $(CYGPATH_W) 'priv/guest_s390_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_s390_toIR.c'; fi`

priv/libvex_x86_darwin_a-guest_mips_helpers.o: priv/guest_mips_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_mips_helpers.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_mips_helpers.o `test -f 'priv/guest_mips_helpers.c' || echo '$(srcdir)/'`priv/guest_mips_helpers.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_helpers.Po
#	$(AM_V_CC)source='priv/guest_mips_helpers.c' object='priv/libvex_x86_darwin_a-guest_mips_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_mips_helpers.o `test -f 'priv/guest_mips_helpers.c' || echo '$(srcdir)/'`priv/guest_mips_helpers.c

priv/libvex_x86_darwin_a-guest_mips_helpers.obj: priv/guest_mips_helpers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_mips_helpers.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_helpers.Tpo -c -o priv/libvex_x86_darwin_a-guest_mips_helpers.obj `if test -f 'priv/guest_mips_helpers.c'; then $(CYGPATH_W) 'priv/guest_mips_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_mips_helpers.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_helpers.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_helpers.Po
#	$(AM_V_CC)source='priv/guest_mips_helpers.c' object='priv/libvex_x86_darwin_a-guest_mips_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_mips_helpers.obj `if test -f 'priv/guest_mips_helpers.c'; then $(CYGPATH_W) 'priv/guest_mips_helpers.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_mips_helpers.c'; fi`

priv/libvex_x86_darwin_a-guest_mips_toIR.o: priv/guest_mips_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_mips_toIR.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_mips_toIR.o `test -f 'priv/guest_mips_toIR.c' || echo '$(srcdir)/'`priv/guest_mips_toIR.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_toIR.Po
#	$(AM_V_CC)source='priv/guest_mips_toIR.c' object='priv/libvex_x86_darwin_a-guest_mips_toIR.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_mips_toIR.o `test -f 'priv/guest_mips_toIR.c' || echo '$(srcdir)/'`priv/guest_mips_toIR.c

priv/libvex_x86_darwin_a-guest_mips_toIR.obj: priv/guest_mips_toIR.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-guest_mips_toIR.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_toIR.Tpo -c -o priv/libvex_x86_darwin_a-guest_mips_toIR.obj `if test -f 'priv/guest_mips_toIR.c'; then $(CYGPATH_W) 'priv/guest_mips_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_mips_toIR.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_toIR.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-guest_mips_toIR.Po
#	$(AM_V_CC)source='priv/guest_mips_toIR.c' object='priv/libvex_x86_darwin_a-guest_mips_toIR.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-guest_mips_toIR.obj `if test -f 'priv/guest_mips_toIR.c'; then $(CYGPATH_W) 'priv/guest_mips_toIR.c'; else $(CYGPATH_W) '$(srcdir)/priv/guest_mips_toIR.c'; fi`

priv/libvex_x86_darwin_a-host_generic_regs.o: priv/host_generic_regs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_regs.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_regs.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_regs.o `test -f 'priv/host_generic_regs.c' || echo '$(srcdir)/'`priv/host_generic_regs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_regs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_regs.Po
#	$(AM_V_CC)source='priv/host_generic_regs.c' object='priv/libvex_x86_darwin_a-host_generic_regs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_regs.o `test -f 'priv/host_generic_regs.c' || echo '$(srcdir)/'`priv/host_generic_regs.c

priv/libvex_x86_darwin_a-host_generic_regs.obj: priv/host_generic_regs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_regs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_regs.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_regs.obj `if test -f 'priv/host_generic_regs.c'; then $(CYGPATH_W) 'priv/host_generic_regs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_regs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_regs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_regs.Po
#	$(AM_V_CC)source='priv/host_generic_regs.c' object='priv/libvex_x86_darwin_a-host_generic_regs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_regs.obj `if test -f 'priv/host_generic_regs.c'; then $(CYGPATH_W) 'priv/host_generic_regs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_regs.c'; fi`

priv/libvex_x86_darwin_a-host_generic_simd64.o: priv/host_generic_simd64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_simd64.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd64.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_simd64.o `test -f 'priv/host_generic_simd64.c' || echo '$(srcdir)/'`priv/host_generic_simd64.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd64.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd64.Po
#	$(AM_V_CC)source='priv/host_generic_simd64.c' object='priv/libvex_x86_darwin_a-host_generic_simd64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_simd64.o `test -f 'priv/host_generic_simd64.c' || echo '$(srcdir)/'`priv/host_generic_simd64.c

priv/libvex_x86_darwin_a-host_generic_simd64.obj: priv/host_generic_simd64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_simd64.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd64.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_simd64.obj `if test -f 'priv/host_generic_simd64.c'; then $(CYGPATH_W) 'priv/host_generic_simd64.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd64.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd64.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd64.Po
#	$(AM_V_CC)source='priv/host_generic_simd64.c' object='priv/libvex_x86_darwin_a-host_generic_simd64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_simd64.obj `if test -f 'priv/host_generic_simd64.c'; then $(CYGPATH_W) 'priv/host_generic_simd64.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd64.c'; fi`

priv/libvex_x86_darwin_a-host_generic_simd128.o: priv/host_generic_simd128.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_simd128.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd128.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_simd128.o `test -f 'priv/host_generic_simd128.c' || echo '$(srcdir)/'`priv/host_generic_simd128.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd128.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd128.Po
#	$(AM_V_CC)source='priv/host_generic_simd128.c' object='priv/libvex_x86_darwin_a-host_generic_simd128.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_simd128.o `test -f 'priv/host_generic_simd128.c' || echo '$(srcdir)/'`priv/host_generic_simd128.c

priv/libvex_x86_darwin_a-host_generic_simd128.obj: priv/host_generic_simd128.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_simd128.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd128.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_simd128.obj `if test -f 'priv/host_generic_simd128.c'; then $(CYGPATH_W) 'priv/host_generic_simd128.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd128.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd128.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd128.Po
#	$(AM_V_CC)source='priv/host_generic_simd128.c' object='priv/libvex_x86_darwin_a-host_generic_simd128.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_simd128.obj `if test -f 'priv/host_generic_simd128.c'; then $(CYGPATH_W) 'priv/host_generic_simd128.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd128.c'; fi`

priv/libvex_x86_darwin_a-host_generic_simd256.o: priv/host_generic_simd256.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_simd256.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd256.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_simd256.o `test -f 'priv/host_generic_simd256.c' || echo '$(srcdir)/'`priv/host_generic_simd256.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd256.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd256.Po
#	$(AM_V_CC)source='priv/host_generic_simd256.c' object='priv/libvex_x86_darwin_a-host_generic_simd256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_simd256.o `test -f 'priv/host_generic_simd256.c' || echo '$(srcdir)/'`priv/host_generic_simd256.c

priv/libvex_x86_darwin_a-host_generic_simd256.obj: priv/host_generic_simd256.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_simd256.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd256.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_simd256.obj `if test -f 'priv/host_generic_simd256.c'; then $(CYGPATH_W) 'priv/host_generic_simd256.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd256.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd256.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_simd256.Po
#	$(AM_V_CC)source='priv/host_generic_simd256.c' object='priv/libvex_x86_darwin_a-host_generic_simd256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_simd256.obj `if test -f 'priv/host_generic_simd256.c'; then $(CYGPATH_W) 'priv/host_generic_simd256.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_simd256.c'; fi`

priv/libvex_x86_darwin_a-host_generic_maddf.o: priv/host_generic_maddf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_maddf.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_maddf.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_maddf.o `test -f 'priv/host_generic_maddf.c' || echo '$(srcdir)/'`priv/host_generic_maddf.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_maddf.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_maddf.Po
#	$(AM_V_CC)source='priv/host_generic_maddf.c' object='priv/libvex_x86_darwin_a-host_generic_maddf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_maddf.o `test -f 'priv/host_generic_maddf.c' || echo '$(srcdir)/'`priv/host_generic_maddf.c

priv/libvex_x86_darwin_a-host_generic_maddf.obj: priv/host_generic_maddf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_maddf.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_maddf.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_maddf.obj `if test -f 'priv/host_generic_maddf.c'; then $(CYGPATH_W) 'priv/host_generic_maddf.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_maddf.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_maddf.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_maddf.Po
#	$(AM_V_CC)source='priv/host_generic_maddf.c' object='priv/libvex_x86_darwin_a-host_generic_maddf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_maddf.obj `if test -f 'priv/host_generic_maddf.c'; then $(CYGPATH_W) 'priv/host_generic_maddf.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_maddf.c'; fi`

priv/libvex_x86_darwin_a-host_generic_reg_alloc2.o: priv/host_generic_reg_alloc2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_reg_alloc2.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_reg_alloc2.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_reg_alloc2.o `test -f 'priv/host_generic_reg_alloc2.c' || echo '$(srcdir)/'`priv/host_generic_reg_alloc2.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_reg_alloc2.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_reg_alloc2.Po
#	$(AM_V_CC)source='priv/host_generic_reg_alloc2.c' object='priv/libvex_x86_darwin_a-host_generic_reg_alloc2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_reg_alloc2.o `test -f 'priv/host_generic_reg_alloc2.c' || echo '$(srcdir)/'`priv/host_generic_reg_alloc2.c

priv/libvex_x86_darwin_a-host_generic_reg_alloc2.obj: priv/host_generic_reg_alloc2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_generic_reg_alloc2.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_reg_alloc2.Tpo -c -o priv/libvex_x86_darwin_a-host_generic_reg_alloc2.obj `if test -f 'priv/host_generic_reg_alloc2.c'; then $(CYGPATH_W) 'priv/host_generic_reg_alloc2.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_reg_alloc2.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_reg_alloc2.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_generic_reg_alloc2.Po
#	$(AM_V_CC)source='priv/host_generic_reg_alloc2.c' object='priv/libvex_x86_darwin_a-host_generic_reg_alloc2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_generic_reg_alloc2.obj `if test -f 'priv/host_generic_reg_alloc2.c'; then $(CYGPATH_W) 'priv/host_generic_reg_alloc2.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_generic_reg_alloc2.c'; fi`

priv/libvex_x86_darwin_a-host_x86_defs.o: priv/host_x86_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_x86_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_x86_defs.o `test -f 'priv/host_x86_defs.c' || echo '$(srcdir)/'`priv/host_x86_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_defs.Po
#	$(AM_V_CC)source='priv/host_x86_defs.c' object='priv/libvex_x86_darwin_a-host_x86_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_x86_defs.o `test -f 'priv/host_x86_defs.c' || echo '$(srcdir)/'`priv/host_x86_defs.c

priv/libvex_x86_darwin_a-host_x86_defs.obj: priv/host_x86_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_x86_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_x86_defs.obj `if test -f 'priv/host_x86_defs.c'; then $(CYGPATH_W) 'priv/host_x86_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_x86_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_defs.Po
#	$(AM_V_CC)source='priv/host_x86_defs.c' object='priv/libvex_x86_darwin_a-host_x86_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_x86_defs.obj `if test -f 'priv/host_x86_defs.c'; then $(CYGPATH_W) 'priv/host_x86_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_x86_defs.c'; fi`

priv/libvex_x86_darwin_a-host_x86_isel.o: priv/host_x86_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_x86_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_x86_isel.o `test -f 'priv/host_x86_isel.c' || echo '$(srcdir)/'`priv/host_x86_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_isel.Po
#	$(AM_V_CC)source='priv/host_x86_isel.c' object='priv/libvex_x86_darwin_a-host_x86_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_x86_isel.o `test -f 'priv/host_x86_isel.c' || echo '$(srcdir)/'`priv/host_x86_isel.c

priv/libvex_x86_darwin_a-host_x86_isel.obj: priv/host_x86_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_x86_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_x86_isel.obj `if test -f 'priv/host_x86_isel.c'; then $(CYGPATH_W) 'priv/host_x86_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_x86_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_x86_isel.Po
#	$(AM_V_CC)source='priv/host_x86_isel.c' object='priv/libvex_x86_darwin_a-host_x86_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_x86_isel.obj `if test -f 'priv/host_x86_isel.c'; then $(CYGPATH_W) 'priv/host_x86_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_x86_isel.c'; fi`

priv/libvex_x86_darwin_a-host_amd64_defs.o: priv/host_amd64_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_amd64_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_amd64_defs.o `test -f 'priv/host_amd64_defs.c' || echo '$(srcdir)/'`priv/host_amd64_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_defs.Po
#	$(AM_V_CC)source='priv/host_amd64_defs.c' object='priv/libvex_x86_darwin_a-host_amd64_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_amd64_defs.o `test -f 'priv/host_amd64_defs.c' || echo '$(srcdir)/'`priv/host_amd64_defs.c

priv/libvex_x86_darwin_a-host_amd64_defs.obj: priv/host_amd64_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_amd64_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_amd64_defs.obj `if test -f 'priv/host_amd64_defs.c'; then $(CYGPATH_W) 'priv/host_amd64_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_amd64_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_defs.Po
#	$(AM_V_CC)source='priv/host_amd64_defs.c' object='priv/libvex_x86_darwin_a-host_amd64_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_amd64_defs.obj `if test -f 'priv/host_amd64_defs.c'; then $(CYGPATH_W) 'priv/host_amd64_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_amd64_defs.c'; fi`

priv/libvex_x86_darwin_a-host_amd64_isel.o: priv/host_amd64_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_amd64_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_amd64_isel.o `test -f 'priv/host_amd64_isel.c' || echo '$(srcdir)/'`priv/host_amd64_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_isel.Po
#	$(AM_V_CC)source='priv/host_amd64_isel.c' object='priv/libvex_x86_darwin_a-host_amd64_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_amd64_isel.o `test -f 'priv/host_amd64_isel.c' || echo '$(srcdir)/'`priv/host_amd64_isel.c

priv/libvex_x86_darwin_a-host_amd64_isel.obj: priv/host_amd64_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_amd64_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_amd64_isel.obj `if test -f 'priv/host_amd64_isel.c'; then $(CYGPATH_W) 'priv/host_amd64_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_amd64_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_amd64_isel.Po
#	$(AM_V_CC)source='priv/host_amd64_isel.c' object='priv/libvex_x86_darwin_a-host_amd64_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_amd64_isel.obj `if test -f 'priv/host_amd64_isel.c'; then $(CYGPATH_W) 'priv/host_amd64_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_amd64_isel.c'; fi`

priv/libvex_x86_darwin_a-host_ppc_defs.o: priv/host_ppc_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_ppc_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_ppc_defs.o `test -f 'priv/host_ppc_defs.c' || echo '$(srcdir)/'`priv/host_ppc_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_defs.Po
#	$(AM_V_CC)source='priv/host_ppc_defs.c' object='priv/libvex_x86_darwin_a-host_ppc_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_ppc_defs.o `test -f 'priv/host_ppc_defs.c' || echo '$(srcdir)/'`priv/host_ppc_defs.c

priv/libvex_x86_darwin_a-host_ppc_defs.obj: priv/host_ppc_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_ppc_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_ppc_defs.obj `if test -f 'priv/host_ppc_defs.c'; then $(CYGPATH_W) 'priv/host_ppc_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_ppc_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_defs.Po
#	$(AM_V_CC)source='priv/host_ppc_defs.c' object='priv/libvex_x86_darwin_a-host_ppc_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_ppc_defs.obj `if test -f 'priv/host_ppc_defs.c'; then $(CYGPATH_W) 'priv/host_ppc_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_ppc_defs.c'; fi`

priv/libvex_x86_darwin_a-host_ppc_isel.o: priv/host_ppc_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_ppc_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_ppc_isel.o `test -f 'priv/host_ppc_isel.c' || echo '$(srcdir)/'`priv/host_ppc_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_isel.Po
#	$(AM_V_CC)source='priv/host_ppc_isel.c' object='priv/libvex_x86_darwin_a-host_ppc_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_ppc_isel.o `test -f 'priv/host_ppc_isel.c' || echo '$(srcdir)/'`priv/host_ppc_isel.c

priv/libvex_x86_darwin_a-host_ppc_isel.obj: priv/host_ppc_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_ppc_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_ppc_isel.obj `if test -f 'priv/host_ppc_isel.c'; then $(CYGPATH_W) 'priv/host_ppc_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_ppc_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_ppc_isel.Po
#	$(AM_V_CC)source='priv/host_ppc_isel.c' object='priv/libvex_x86_darwin_a-host_ppc_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_ppc_isel.obj `if test -f 'priv/host_ppc_isel.c'; then $(CYGPATH_W) 'priv/host_ppc_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_ppc_isel.c'; fi`

priv/libvex_x86_darwin_a-host_arm_defs.o: priv/host_arm_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_arm_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_arm_defs.o `test -f 'priv/host_arm_defs.c' || echo '$(srcdir)/'`priv/host_arm_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_defs.Po
#	$(AM_V_CC)source='priv/host_arm_defs.c' object='priv/libvex_x86_darwin_a-host_arm_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_arm_defs.o `test -f 'priv/host_arm_defs.c' || echo '$(srcdir)/'`priv/host_arm_defs.c

priv/libvex_x86_darwin_a-host_arm_defs.obj: priv/host_arm_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_arm_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_arm_defs.obj `if test -f 'priv/host_arm_defs.c'; then $(CYGPATH_W) 'priv/host_arm_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_defs.Po
#	$(AM_V_CC)source='priv/host_arm_defs.c' object='priv/libvex_x86_darwin_a-host_arm_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_arm_defs.obj `if test -f 'priv/host_arm_defs.c'; then $(CYGPATH_W) 'priv/host_arm_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm_defs.c'; fi`

priv/libvex_x86_darwin_a-host_arm_isel.o: priv/host_arm_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_arm_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_arm_isel.o `test -f 'priv/host_arm_isel.c' || echo '$(srcdir)/'`priv/host_arm_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_isel.Po
#	$(AM_V_CC)source='priv/host_arm_isel.c' object='priv/libvex_x86_darwin_a-host_arm_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_arm_isel.o `test -f 'priv/host_arm_isel.c' || echo '$(srcdir)/'`priv/host_arm_isel.c

priv/libvex_x86_darwin_a-host_arm_isel.obj: priv/host_arm_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_arm_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_arm_isel.obj `if test -f 'priv/host_arm_isel.c'; then $(CYGPATH_W) 'priv/host_arm_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm_isel.Po
#	$(AM_V_CC)source='priv/host_arm_isel.c' object='priv/libvex_x86_darwin_a-host_arm_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_arm_isel.obj `if test -f 'priv/host_arm_isel.c'; then $(CYGPATH_W) 'priv/host_arm_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm_isel.c'; fi`

priv/libvex_x86_darwin_a-host_arm64_defs.o: priv/host_arm64_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_arm64_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_arm64_defs.o `test -f 'priv/host_arm64_defs.c' || echo '$(srcdir)/'`priv/host_arm64_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_defs.Po
#	$(AM_V_CC)source='priv/host_arm64_defs.c' object='priv/libvex_x86_darwin_a-host_arm64_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_arm64_defs.o `test -f 'priv/host_arm64_defs.c' || echo '$(srcdir)/'`priv/host_arm64_defs.c

priv/libvex_x86_darwin_a-host_arm64_defs.obj: priv/host_arm64_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_arm64_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_arm64_defs.obj `if test -f 'priv/host_arm64_defs.c'; then $(CYGPATH_W) 'priv/host_arm64_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm64_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_defs.Po
#	$(AM_V_CC)source='priv/host_arm64_defs.c' object='priv/libvex_x86_darwin_a-host_arm64_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_arm64_defs.obj `if test -f 'priv/host_arm64_defs.c'; then $(CYGPATH_W) 'priv/host_arm64_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm64_defs.c'; fi`

priv/libvex_x86_darwin_a-host_arm64_isel.o: priv/host_arm64_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_arm64_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_arm64_isel.o `test -f 'priv/host_arm64_isel.c' || echo '$(srcdir)/'`priv/host_arm64_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_isel.Po
#	$(AM_V_CC)source='priv/host_arm64_isel.c' object='priv/libvex_x86_darwin_a-host_arm64_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_arm64_isel.o `test -f 'priv/host_arm64_isel.c' || echo '$(srcdir)/'`priv/host_arm64_isel.c

priv/libvex_x86_darwin_a-host_arm64_isel.obj: priv/host_arm64_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_arm64_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_arm64_isel.obj `if test -f 'priv/host_arm64_isel.c'; then $(CYGPATH_W) 'priv/host_arm64_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm64_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_arm64_isel.Po
#	$(AM_V_CC)source='priv/host_arm64_isel.c' object='priv/libvex_x86_darwin_a-host_arm64_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_arm64_isel.obj `if test -f 'priv/host_arm64_isel.c'; then $(CYGPATH_W) 'priv/host_arm64_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_arm64_isel.c'; fi`

priv/libvex_x86_darwin_a-host_s390_defs.o: priv/host_s390_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_s390_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_s390_defs.o `test -f 'priv/host_s390_defs.c' || echo '$(srcdir)/'`priv/host_s390_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_defs.Po
#	$(AM_V_CC)source='priv/host_s390_defs.c' object='priv/libvex_x86_darwin_a-host_s390_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_s390_defs.o `test -f 'priv/host_s390_defs.c' || echo '$(srcdir)/'`priv/host_s390_defs.c

priv/libvex_x86_darwin_a-host_s390_defs.obj: priv/host_s390_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_s390_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_s390_defs.obj `if test -f 'priv/host_s390_defs.c'; then $(CYGPATH_W) 'priv/host_s390_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_s390_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_defs.Po
#	$(AM_V_CC)source='priv/host_s390_defs.c' object='priv/libvex_x86_darwin_a-host_s390_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_s390_defs.obj `if test -f 'priv/host_s390_defs.c'; then $(CYGPATH_W) 'priv/host_s390_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_s390_defs.c'; fi`

priv/libvex_x86_darwin_a-host_s390_isel.o: priv/host_s390_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_s390_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_s390_isel.o `test -f 'priv/host_s390_isel.c' || echo '$(srcdir)/'`priv/host_s390_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_isel.Po
#	$(AM_V_CC)source='priv/host_s390_isel.c' object='priv/libvex_x86_darwin_a-host_s390_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_s390_isel.o `test -f 'priv/host_s390_isel.c' || echo '$(srcdir)/'`priv/host_s390_isel.c

priv/libvex_x86_darwin_a-host_s390_isel.obj: priv/host_s390_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_s390_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_s390_isel.obj `if test -f 'priv/host_s390_isel.c'; then $(CYGPATH_W) 'priv/host_s390_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_s390_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_s390_isel.Po
#	$(AM_V_CC)source='priv/host_s390_isel.c' object='priv/libvex_x86_darwin_a-host_s390_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_s390_isel.obj `if test -f 'priv/host_s390_isel.c'; then $(CYGPATH_W) 'priv/host_s390_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_s390_isel.c'; fi`

priv/libvex_x86_darwin_a-s390_disasm.o: priv/s390_disasm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-s390_disasm.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-s390_disasm.Tpo -c -o priv/libvex_x86_darwin_a-s390_disasm.o `test -f 'priv/s390_disasm.c' || echo '$(srcdir)/'`priv/s390_disasm.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-s390_disasm.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-s390_disasm.Po
#	$(AM_V_CC)source='priv/s390_disasm.c' object='priv/libvex_x86_darwin_a-s390_disasm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-s390_disasm.o `test -f 'priv/s390_disasm.c' || echo '$(srcdir)/'`priv/s390_disasm.c

priv/libvex_x86_darwin_a-s390_disasm.obj: priv/s390_disasm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-s390_disasm.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-s390_disasm.Tpo -c -o priv/libvex_x86_darwin_a-s390_disasm.obj `if test -f 'priv/s390_disasm.c'; then $(CYGPATH_W) 'priv/s390_disasm.c'; else $(CYGPATH_W) '$(srcdir)/priv/s390_disasm.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-s390_disasm.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-s390_disasm.Po
#	$(AM_V_CC)source='priv/s390_disasm.c' object='priv/libvex_x86_darwin_a-s390_disasm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-s390_disasm.obj `if test -f 'priv/s390_disasm.c'; then $(CYGPATH_W) 'priv/s390_disasm.c'; else $(CYGPATH_W) '$(srcdir)/priv/s390_disasm.c'; fi`

priv/libvex_x86_darwin_a-host_mips_defs.o: priv/host_mips_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_mips_defs.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_mips_defs.o `test -f 'priv/host_mips_defs.c' || echo '$(srcdir)/'`priv/host_mips_defs.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_defs.Po
#	$(AM_V_CC)source='priv/host_mips_defs.c' object='priv/libvex_x86_darwin_a-host_mips_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_mips_defs.o `test -f 'priv/host_mips_defs.c' || echo '$(srcdir)/'`priv/host_mips_defs.c

priv/libvex_x86_darwin_a-host_mips_defs.obj: priv/host_mips_defs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_mips_defs.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_defs.Tpo -c -o priv/libvex_x86_darwin_a-host_mips_defs.obj `if test -f 'priv/host_mips_defs.c'; then $(CYGPATH_W) 'priv/host_mips_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_mips_defs.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_defs.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_defs.Po
#	$(AM_V_CC)source='priv/host_mips_defs.c' object='priv/libvex_x86_darwin_a-host_mips_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_mips_defs.obj `if test -f 'priv/host_mips_defs.c'; then $(CYGPATH_W) 'priv/host_mips_defs.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_mips_defs.c'; fi`

priv/libvex_x86_darwin_a-host_mips_isel.o: priv/host_mips_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_mips_isel.o -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_mips_isel.o `test -f 'priv/host_mips_isel.c' || echo '$(srcdir)/'`priv/host_mips_isel.c
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_isel.Po
#	$(AM_V_CC)source='priv/host_mips_isel.c' object='priv/libvex_x86_darwin_a-host_mips_isel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_mips_isel.o `test -f 'priv/host_mips_isel.c' || echo '$(srcdir)/'`priv/host_mips_isel.c

priv/libvex_x86_darwin_a-host_mips_isel.obj: priv/host_mips_isel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -MT priv/libvex_x86_darwin_a-host_mips_isel.obj -MD -MP -MF priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_isel.Tpo -c -o priv/libvex_x86_darwin_a-host_mips_isel.obj `if test -f 'priv/host_mips_isel.c'; then $(CYGPATH_W) 'priv/host_mips_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_mips_isel.c'; fi`
	$(AM_V_at)$(am__mv) priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_isel.Tpo priv/$(DEPDIR)/libvex_x86_darwin_a-host_mips_isel.Po
#	$(AM_V_CC)source='priv/host_mips_isel.c' object='priv/libvex_x86_darwin_a-host_mips_isel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvex_x86_darwin_a_CPPFLAGS) $(CPPFLAGS) $(libvex_x86_darwin_a_CFLAGS) $(CFLAGS) -c -o priv/libvex_x86_darwin_a-host_mips_isel.obj `if test -f 'priv/host_mips_isel.c'; then $(CYGPATH_W) 'priv/host_mips_isel.c'; else $(CYGPATH_W) '$(srcdir)/priv/host_mips_isel.c'; fi`
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f priv/$(DEPDIR)/$(am__dirstamp)
	-rm -f priv/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-pkglibLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf priv/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-pkglibLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf priv/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pkgincludeHEADERS uninstall-pkglibLIBRARIES

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-pkglibLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-pkgincludeHEADERS \
	install-pkglibLIBRARIES install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-pkgincludeHEADERS \
	uninstall-pkglibLIBRARIES

.PRECIOUS: Makefile


# This used to be required when Vex had a handwritten Makefile.  It
# shouldn't be needed any more, though.

#----------------------------------------------------------------------------
# noinst_PROGRAMS and noinst_DSYMS targets
#----------------------------------------------------------------------------

# On Darwin, for a program 'p', the DWARF debug info is stored in the
# directory 'p.dSYM'.  This must be generated after the executable is
# created, with 'dsymutil p'.  We could redefine LINK with a script that
# executes 'dsymutil' after linking, but that's a pain.  Instead we use this
# hook so that every time "make check" is run, we subsequently invoke
# 'dsymutil' on all the executables that lack a .dSYM directory, or that are
# newer than their corresponding .dSYM directory.
build-noinst_DSYMS: $(noinst_DSYMS)
	for f in $(noinst_DSYMS); do \
	  if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
	      echo "dsymutil $$f"; \
	      dsymutil $$f; \
	  fi; \
	done

# This is used by coregrind/Makefile.am and Makefile.tool.am for doing
# "in-place" installs.  It copies $(noinst_PROGRAMS) into $inplacedir.
# It needs to be depended on by an 'all-local' rule.
inplace-noinst_PROGRAMS: $(noinst_PROGRAMS)
	mkdir -p $(inplacedir); \
	for f in $(noinst_PROGRAMS) ; do \
	  rm -f $(inplacedir)/$$f; \
	  ln -f -s ../$(subdir)/$$f $(inplacedir); \
	done

# Similar to inplace-noinst_PROGRAMS
inplace-noinst_DSYMS: build-noinst_DSYMS
	mkdir -p $(inplacedir); \
	for f in $(noinst_DSYMS); do \
	  rm -f $(inplacedir)/$$f.dSYM; \
	  ln -f -s ../$(subdir)/$$f.dSYM $(inplacedir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make install".  It copies $(noinst_PROGRAMS) into $prefix/lib/valgrind/.
# It needs to be depended on by an 'install-exec-local' rule.
install-noinst_PROGRAMS: $(noinst_PROGRAMS)
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(pkglibdir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make uninstall".  It removes $(noinst_PROGRAMS) from $prefix/lib/valgrind/.
# It needs to be depended on by an 'uninstall-local' rule.
uninstall-noinst_PROGRAMS:
	for f in $(noinst_PROGRAMS); do \
	  rm -f $(DESTDIR)$(pkglibdir)/$$f; \
	done

# Similar to install-noinst_PROGRAMS.
# Nb: we don't use $(INSTALL_PROGRAM) here because it doesn't work with
# directories.  XXX: not sure whether the resulting permissions will be
# correct when using 'cp -R'...
install-noinst_DSYMS: build-noinst_DSYMS
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir); \
	for f in $(noinst_DSYMS); do \
	  cp -R $$f.dSYM $(DESTDIR)$(pkglibdir); \
	done

# Similar to uninstall-noinst_PROGRAMS.
uninstall-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -f $(DESTDIR)$(pkglibdir)/$$f.dSYM; \
	done

# This needs to be depended on by a 'clean-local' rule.
clean-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -rf $$f.dSYM; \
	done

# This is very uggerly.  Need to sed out both "xyzzyN" and
# "xyzzy$N" since gcc on different targets emits the constants
# differently -- with a leading $ on x86/amd64 but none on ppc32/64.
pub/libvex_guest_offsets.h: auxprogs/genoffsets.c \
			    pub/libvex_basictypes.h \
			    pub/libvex_guest_x86.h \
			    pub/libvex_guest_amd64.h \
			    pub/libvex_guest_ppc32.h \
			    pub/libvex_guest_ppc64.h \
			    pub/libvex_guest_arm.h \
			    pub/libvex_guest_arm64.h \
			    pub/libvex_guest_s390x.h \
			    pub/libvex_guest_mips32.h \
			    pub/libvex_guest_mips64.h
	rm -f auxprogs/genoffsets.s
	$(mkdir_p) auxprogs pub
	$(CC) $(CFLAGS_FOR_GENOFFSETS) \
	      $(LIBVEX_CFLAGS) \
	      $(AM_CFLAGS_AMD64_DARWIN) \
				-O -S -o auxprogs/genoffsets.s \
					 $(srcdir)/auxprogs/genoffsets.c
	grep xyzzy auxprogs/genoffsets.s | grep "^#define" \
	   | sed "s/xyzzy\\$$//g" \
	   | sed "s/xyzzy#//g" \
	   | sed "s/xyzzy//g" \
	   > pub/libvex_guest_offsets.h
	rm -f auxprogs/genoffsets.s

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
